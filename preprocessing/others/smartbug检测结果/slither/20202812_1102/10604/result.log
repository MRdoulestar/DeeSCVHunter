INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/10604.sol:
/../data/reentrancy/solidity_contract/10604.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/10604.sol:111:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns (bool success);
    ^-----------------------------------------------------------------^
/../data/reentrancy/solidity_contract/10604.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/10604.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/10604.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/10604.sol:22:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/10604.sol:28:5: Warning: Function state mutability can be restricted to pure
    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/10604.sol:34:5: Warning: Function state mutability can be restricted to pure
    function safeMult(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/10604.sol:40:5: Warning: Function state mutability can be restricted to pure
    function min(uint256 a, uint256 b) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/10604.sol:48:5: Warning: Function state mutability can be restricted to pure
    function max(uint256 a, uint256 b) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Balancer.fallback (/../data/reentrancy/solidity_contract/10604.sol#240-269) sends eth to arbitrary user
	Dangerous calls:
	- coldWallet.transfer(address(this).balance) (/../data/reentrancy/solidity_contract/10604.sol#243)
	- coldWallet.transfer(toColdWallet) (/../data/reentrancy/solidity_contract/10604.sol#265)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
t in Balancer.getTargetPerWallet (/../data/reentrancy/solidity_contract/10604.sol#227) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Balancer.handleTokens (/../data/reentrancy/solidity_contract/10604.sol#272-299) does not use the value returned by external calls:
	-token.transfer(coldWallet,token.balanceOf(this)) (/../data/reentrancy/solidity_contract/10604.sol#274)
	-token.transfer(accounts[i],targetPerHotwallet - balances[i]) (/../data/reentrancy/solidity_contract/10604.sol#289)
	-token.transfer(coldWallet,toColdWallet) (/../data/reentrancy/solidity_contract/10604.sol#296)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Balancer.loadTokenBalances has external calls inside a loop:
	- balance = token.balanceOf(accounts[i]) (/../data/reentrancy/solidity_contract/10604.sol#216)
Balancer.fallback has external calls inside a loop:
	- accounts[i].transfer(targetPerHotwallet - balances[i]) (/../data/reentrancy/solidity_contract/10604.sol#258)
Balancer.handleTokens has external calls inside a loop:
	- token.transfer(accounts[i],targetPerHotwallet - balances[i]) (/../data/reentrancy/solidity_contract/10604.sol#289)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Ownable.setOwner (/../data/reentrancy/solidity_contract/10604.sol#14-18) should be declared external
HasWorkers.allWorkers (/../data/reentrancy/solidity_contract/10604.sol#82-87) should be declared external
HasWorkers.addWorker (/../data/reentrancy/solidity_contract/10604.sol#89-95) should be declared external
HasWorkers.removeWorker (/../data/reentrancy/solidity_contract/10604.sol#97-107) should be declared external
Token.transfer (/../data/reentrancy/solidity_contract/10604.sol#111) should be declared external
Token.transferFrom (/../data/reentrancy/solidity_contract/10604.sol#112) should be declared external
Token.allowance (/../data/reentrancy/solidity_contract/10604.sol#113) should be declared external
Token.approve (/../data/reentrancy/solidity_contract/10604.sol#114) should be declared external
Token.increaseApproval (/../data/reentrancy/solidity_contract/10604.sol#115) should be declared external
Token.balanceOf (/../data/reentrancy/solidity_contract/10604.sol#116) should be declared external
Balancer.allAccounts (/../data/reentrancy/solidity_contract/10604.sol#135-137) should be declared external
Balancer.pause (/../data/reentrancy/solidity_contract/10604.sol#140-143) should be declared external
Balancer.unpause (/../data/reentrancy/solidity_contract/10604.sol#146-149) should be declared external
Balancer.setLimitEth (/../data/reentrancy/solidity_contract/10604.sol#152-155) should be declared external
Balancer.setLimitToken (/../data/reentrancy/solidity_contract/10604.sol#158-161) should be declared external
Balancer.addAccount (/../data/reentrancy/solidity_contract/10604.sol#164-167) should be declared external
Balancer.removeAccountSearch (/../data/reentrancy/solidity_contract/10604.sol#170-178) should be declared external
Balancer.setColdWallet (/../data/reentrancy/solidity_contract/10604.sol#189-192) should be declared external
Balancer.executeTransaction (/../data/reentrancy/solidity_contract/10604.sol#195-197) should be declared external
Balancer.fallback (/../data/reentrancy/solidity_contract/10604.sol#240-269) should be declared external
Balancer.handleTokens (/../data/reentrancy/solidity_contract/10604.sol#272-299) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in Balancer.executeTransaction (/../data/reentrancy/solidity_contract/10604.sol#195-197):
	-to.call.value(value)(data) /../data/reentrancy/solidity_contract/10604.sol#196
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_owner' of Ownable.setOwner (/../data/reentrancy/solidity_contract/10604.sol#14) is not in mixedCase
Parameter '_worker' of HasWorkers.isWorker (/../data/reentrancy/solidity_contract/10604.sol#78) is not in mixedCase
Parameter '_worker' of HasWorkers.addWorker (/../data/reentrancy/solidity_contract/10604.sol#89) is not in mixedCase
Parameter '_worker' of HasWorkers.removeWorker (/../data/reentrancy/solidity_contract/10604.sol#97) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/10604.sol analyzed (5 contracts), 32 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/14458.sol:
/../data/reentrancy/solidity_contract/14458.sol:100:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function BankeraToken(uint256 _blocksPerRound, uint64 _round) public {
 ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/14458.sol:252:6: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(this.balance > 0) {
		   ^----------^
/../data/reentrancy/solidity_contract/14458.sol:253:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			contractOwner.transfer(this.balance);
			                       ^----------^
/../data/reentrancy/solidity_contract/14458.sol:305:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, _value);
		^------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:319:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
		^-----------------------------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:331:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
		^-----------------------------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:363:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			assert(_to.call.value(0)(bytes4(keccak256(_custom_fallback)), msg.sender, _value, _data));
			                                ^-------------------------^
/../data/reentrancy/solidity_contract/14458.sol:363:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			assert(_to.call.value(0)(bytes4(keccak256(_custom_fallback)), msg.sender, _value, _data));
			                                ^-------------------------^
/../data/reentrancy/solidity_contract/14458.sol:366:4: Warning: Invoking events without "emit" prefix is deprecated.
			Transfer(msg.sender, _to, _value, _data);
			^--------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:367:4: Warning: Invoking events without "emit" prefix is deprecated.
			Transfer(msg.sender, _to, _value);
			^-------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:497:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(msg.sender, _receiver, _tokenAmount, empty);
		^--------------------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:498:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(msg.sender, _receiver, _tokenAmount);
		^-------------------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:539:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value, _data);
		^---------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:540:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);
		^--------------------------^
/../data/reentrancy/solidity_contract/14458.sol:560:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value, _data);
		^---------------------------------^
/../data/reentrancy/solidity_contract/14458.sol:561:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);
		^--------------------------^
/../data/reentrancy/solidity_contract/14458.sol:113:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address _from, uint256 _value, bytes _data) public whenNotPaused view {
	                       ^-----------^
/../data/reentrancy/solidity_contract/14458.sol:113:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address _from, uint256 _value, bytes _data) public whenNotPaused view {
	                                      ^------------^
/../data/reentrancy/solidity_contract/14458.sol:113:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address _from, uint256 _value, bytes _data) public whenNotPaused view {
	                                                      ^---------^

INFO:Detectors:[93m
BankeraToken.isContract (/../data/reentrancy/solidity_contract/14458.sol#448-455) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#285-299):
	External calls:
	- require(bool)(transferToContract(_from,_to,_value,empty)) (/../data/reentrancy/solidity_contract/14458.sol#292)
	State variables written after the call(s):
	- allowed (/../data/reentrancy/solidity_contract/14458.sol#297)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
empty in BankeraToken.issue (/../data/reentrancy/solidity_contract/14458.sol#491) is a local variable never initialiazed
empty in BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#264) is a local variable never initialiazed
empty in BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#290) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
BankeraToken.isContract uses assembly (/../data/reentrancy/solidity_contract/14458.sol#448-455)
	- /../data/reentrancy/solidity_contract/14458.sol#450-454
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
BankeraToken.totalTokens should be constant (/../data/reentrancy/solidity_contract/14458.sol#65)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20.totalSupply (/../data/reentrancy/solidity_contract/14458.sol#34) should be declared external
BankeraToken.totalSupply (/../data/reentrancy/solidity_contract/14458.sol#279-281) should be declared external
BankeraToken.balanceOf (/../data/reentrancy/solidity_contract/14458.sol#274-276) should be declared external
ERC20.balanceOf (/../data/reentrancy/solidity_contract/14458.sol#35) should be declared external
ERC20.transfer (/../data/reentrancy/solidity_contract/14458.sol#36) should be declared external
BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#261-271) should be declared external
BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#285-299) should be declared external
ERC20.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#37) should be declared external
ERC20.approve (/../data/reentrancy/solidity_contract/14458.sol#38) should be declared external
BankeraToken.approve (/../data/reentrancy/solidity_contract/14458.sol#303-307) should be declared external
ERC20.allowance (/../data/reentrancy/solidity_contract/14458.sol#39) should be declared external
BankeraToken.allowance (/../data/reentrancy/solidity_contract/14458.sol#311-313) should be declared external
ContractReceiver.tokenFallback (/../data/reentrancy/solidity_contract/14458.sol#47) should be declared external
BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#337-345) should be declared external
ERC223.transfer (/../data/reentrancy/solidity_contract/14458.sol#52) should be declared external
ERC223.transfer (/../data/reentrancy/solidity_contract/14458.sol#53) should be declared external
BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349-372) should be declared external
BankeraToken.fallback (/../data/reentrancy/solidity_contract/14458.sol#108-109) should be declared external
BankeraToken.tokenFallback (/../data/reentrancy/solidity_contract/14458.sol#113-115) should be declared external
BankeraToken.setReward (/../data/reentrancy/solidity_contract/14458.sol#117-131) should be declared external
BankeraToken.changeContractOwner (/../data/reentrancy/solidity_contract/14458.sol#134-141) should be declared external
BankeraToken.changeRewardManager (/../data/reentrancy/solidity_contract/14458.sol#144-151) should be declared external
BankeraToken.changeRoundManager (/../data/reentrancy/solidity_contract/14458.sol#154-161) should be declared external
BankeraToken.changeIssueManager (/../data/reentrancy/solidity_contract/14458.sol#164-171) should be declared external
BankeraToken.setBlocksPerRound (/../data/reentrancy/solidity_contract/14458.sol#173-175) should be declared external
BankeraToken.pause (/../data/reentrancy/solidity_contract/14458.sol#177-179) should be declared external
BankeraToken.resume (/../data/reentrancy/solidity_contract/14458.sol#182-184) should be declared external
BankeraToken.getRoundBalance (/../data/reentrancy/solidity_contract/14458.sol#232-234) should be declared external
BankeraToken.isModifiedInRound (/../data/reentrancy/solidity_contract/14458.sol#236-238) should be declared external
BankeraToken.getBalanceModificationRounds (/../data/reentrancy/solidity_contract/14458.sol#240-242) should be declared external
BankeraToken.issueTokens (/../data/reentrancy/solidity_contract/14458.sol#245-248) should be declared external
BankeraToken.withdrawEther (/../data/reentrancy/solidity_contract/14458.sol#250-257) should be declared external
BankeraToken.increaseApproval (/../data/reentrancy/solidity_contract/14458.sol#317-321) should be declared external
BankeraToken.decreaseApproval (/../data/reentrancy/solidity_contract/14458.sol#324-333) should be declared external
BankeraToken.claimReward (/../data/reentrancy/solidity_contract/14458.sol#374-377) should be declared external
BankeraToken.calculateClaimableReward (/../data/reentrancy/solidity_contract/14458.sol#392-394) should be declared external
BankeraToken.createRounds (/../data/reentrancy/solidity_contract/14458.sol#430-444) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/14458.sol:
	- pragma solidity^0.4.18 (/../data/reentrancy/solidity_contract/14458.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349-372):
	-assert(bool)(_to.call.value(0)(bytes4(keccak256()(_custom_fallback)),msg.sender,_value,_data)) /../data/reentrancy/solidity_contract/14458.sol#363
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_custom_fallback' of ERC223.transfer (/../data/reentrancy/solidity_contract/14458.sol#53) is not in mixedCase
Parameter '_owner' of BankeraToken.balanceOf (/../data/reentrancy/solidity_contract/14458.sol#274) is not in mixedCase
Parameter '_to' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#261) is not in mixedCase
Parameter '_value' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#261) is not in mixedCase
Parameter '_from' of BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#285) is not in mixedCase
Parameter '_to' of BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#285) is not in mixedCase
Parameter '_value' of BankeraToken.transferFrom (/../data/reentrancy/solidity_contract/14458.sol#285) is not in mixedCase
Parameter '_spender' of BankeraToken.approve (/../data/reentrancy/solidity_contract/14458.sol#303) is not in mixedCase
Parameter '_value' of BankeraToken.approve (/../data/reentrancy/solidity_contract/14458.sol#303) is not in mixedCase
Parameter '_owner' of BankeraToken.allowance (/../data/reentrancy/solidity_contract/14458.sol#311) is not in mixedCase
Parameter '_spender' of BankeraToken.allowance (/../data/reentrancy/solidity_contract/14458.sol#311) is not in mixedCase
Parameter '_to' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#337) is not in mixedCase
Parameter '_value' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#337) is not in mixedCase
Parameter '_data' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#337) is not in mixedCase
Parameter '_to' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349) is not in mixedCase
Parameter '_value' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349) is not in mixedCase
Parameter '_data' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349) is not in mixedCase
Parameter '_custom_fallback' of BankeraToken.transfer (/../data/reentrancy/solidity_contract/14458.sol#349) is not in mixedCase
Function 'BankeraToken.BankeraToken' (/../data/reentrancy/solidity_contract/14458.sol#100-106) is not in mixedCase
Parameter '_blocksPerRound' of BankeraToken.BankeraToken (/../data/reentrancy/solidity_contract/14458.sol#100) is not in mixedCase
Parameter '_round' of BankeraToken.BankeraToken (/../data/reentrancy/solidity_contract/14458.sol#100) is not in mixedCase
Parameter '_roundNumber' of BankeraToken.setReward (/../data/reentrancy/solidity_contract/14458.sol#117) is not in mixedCase
Parameter '_roundRewardInWei' of BankeraToken.setReward (/../data/reentrancy/solidity_contract/14458.sol#117) is not in mixedCase
Parameter '_newContractOwner' of BankeraToken.changeContractOwner (/../data/reentrancy/solidity_contract/14458.sol#134) is not in mixedCase
Parameter '_newRewardManager' of BankeraToken.changeRewardManager (/../data/reentrancy/solidity_contract/14458.sol#144) is not in mixedCase
Parameter '_newRoundManager' of BankeraToken.changeRoundManager (/../data/reentrancy/solidity_contract/14458.sol#154) is not in mixedCase
Parameter '_newIssueManager' of BankeraToken.changeIssueManager (/../data/reentrancy/solidity_contract/14458.sol#164) is not in mixedCase
Parameter '_newBlocksPerRound' of BankeraToken.setBlocksPerRound (/../data/reentrancy/solidity_contract/14458.sol#173) is not in mixedCase
Parameter '_address' of BankeraToken.getRoundBalance (/../data/reentrancy/solidity_contract/14458.sol#232) is not in mixedCase
Parameter '_round' of BankeraToken.getRoundBalance (/../data/reentrancy/solidity_contract/14458.sol#232) is not in mixedCase
Parameter '_address' of BankeraToken.isModifiedInRound (/../data/reentrancy/solidity_contract/14458.sol#236) is not in mixedCase
Parameter '_round' of BankeraToken.isModifiedInRound (/../data/reentrancy/solidity_contract/14458.sol#236) is not in mixedCase
Parameter '_address' of BankeraToken.getBalanceModificationRounds (/../data/reentrancy/solidity_contract/14458.sol#240) is not in mixedCase
Parameter '_receiver' of BankeraToken.issueTokens (/../data/reentrancy/solidity_contract/14458.sol#245) is not in mixedCase
Parameter '_tokenAmount' of BankeraToken.issueTokens (/../data/reentrancy/solidity_contract/14458.sol#245) is not in mixedCase
Parameter '_spender' of BankeraToken.increaseApproval (/../data/reentrancy/solidity_contract/14458.sol#317) is not in mixedCase
Parameter '_addedValue' of BankeraToken.increaseApproval (/../data/reentrancy/solidity_contract/14458.sol#317) is not in mixedCase
Parameter '_spender' of BankeraToken.decreaseApproval (/../data/reentrancy/solidity_contract/14458.sol#324) is not in mixedCase
Parameter '_subtractedValue' of BankeraToken.decreaseApproval (/../data/reentrancy/solidity_contract/14458.sol#324) is not in mixedCase
Parameter '_claimTillRound' of BankeraToken.claimRewardTillRound (/../data/reentrancy/solidity_contract/14458.sol#379) is not in mixedCase
Parameter '_address' of BankeraToken.calculateClaimableReward (/../data/reentrancy/solidity_contract/14458.sol#392) is not in mixedCase
Parameter '_address' of BankeraToken.calculateClaimableRewardTillRound (/../data/reentrancy/solidity_contract/14458.sol#396) is not in mixedCase
Parameter '_claimTillRound' of BankeraToken.calculateClaimableRewardTillRound (/../data/reentrancy/solidity_contract/14458.sol#396) is not in mixedCase
Parameter '_blocksAfterLastRound' of BankeraToken.updateRoundsInformation (/../data/reentrancy/solidity_contract/14458.sol#464) is not in mixedCase
Parameter '_receiver' of BankeraToken.issue (/../data/reentrancy/solidity_contract/14458.sol#481) is not in mixedCase
Parameter '_tokenAmount' of BankeraToken.issue (/../data/reentrancy/solidity_contract/14458.sol#481) is not in mixedCase
Parameter '_receiver' of BankeraToken.addToAddressBalancesInfo (/../data/reentrancy/solidity_contract/14458.sol#501) is not in mixedCase
Parameter '_tokenAmount' of BankeraToken.addToAddressBalancesInfo (/../data/reentrancy/solidity_contract/14458.sol#501) is not in mixedCase
Parameter '_adr' of BankeraToken.subFromAddressBalancesInfo (/../data/reentrancy/solidity_contract/14458.sol#516) is not in mixedCase
Parameter '_tokenAmount' of BankeraToken.subFromAddressBalancesInfo (/../data/reentrancy/solidity_contract/14458.sol#516) is not in mixedCase
Parameter '_from' of BankeraToken.transferToAddress (/../data/reentrancy/solidity_contract/14458.sol#526) is not in mixedCase
Parameter '_to' of BankeraToken.transferToAddress (/../data/reentrancy/solidity_contract/14458.sol#526) is not in mixedCase
Parameter '_value' of BankeraToken.transferToAddress (/../data/reentrancy/solidity_contract/14458.sol#526) is not in mixedCase
Parameter '_data' of BankeraToken.transferToAddress (/../data/reentrancy/solidity_contract/14458.sol#526) is not in mixedCase
Parameter '_from' of BankeraToken.transferToContract (/../data/reentrancy/solidity_contract/14458.sol#545) is not in mixedCase
Parameter '_to' of BankeraToken.transferToContract (/../data/reentrancy/solidity_contract/14458.sol#545) is not in mixedCase
Parameter '_value' of BankeraToken.transferToContract (/../data/reentrancy/solidity_contract/14458.sol#545) is not in mixedCase
Parameter '_data' of BankeraToken.transferToContract (/../data/reentrancy/solidity_contract/14458.sol#545) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/14458.sol analyzed (5 contracts), 104 result(s) found
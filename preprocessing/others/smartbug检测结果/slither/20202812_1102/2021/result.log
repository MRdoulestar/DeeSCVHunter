INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/2021.sol:
/../data/reentrancy/solidity_contract/2021.sol:65:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!address(this).delegatecall(0x21835af6, n - 1)) throw;
                                                            ^---^
/../data/reentrancy/solidity_contract/2021.sol:107:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/../data/reentrancy/solidity_contract/2021.sol:110:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/../data/reentrancy/solidity_contract/2021.sol:113:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/../data/reentrancy/solidity_contract/2021.sol:125:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/../data/reentrancy/solidity_contract/2021.sol:186:14: Warning: Use of the "var" keyword is deprecated.
        var (asset, institution, _) = decodeIndirect(bban);
             ^---^
/../data/reentrancy/solidity_contract/2021.sol:186:21: Warning: Use of the "var" keyword is deprecated.
        var (asset, institution, _) = decodeIndirect(bban);
                    ^---------^
/../data/reentrancy/solidity_contract/2021.sol:186:34: Warning: Use of the "var" keyword is deprecated.
        var (asset, institution, _) = decodeIndirect(bban);
                                 ^
/../data/reentrancy/solidity_contract/2021.sol:2:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Ambi {
^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:188:40: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 assetInstitutionHash = sha3(asset, institution);
                                       ^----------------------^
/../data/reentrancy/solidity_contract/2021.sol:188:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 assetInstitutionHash = sha3(asset, institution);
                                       ^----------------------^
/../data/reentrancy/solidity_contract/2021.sol:193:64: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (institutions[assetInstitutionHash], assets[sha3(asset)], false);
                                                               ^---------^
/../data/reentrancy/solidity_contract/2021.sol:193:64: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return (institutions[assetInstitutionHash], assets[sha3(asset)], false);
                                                               ^---------^
/../data/reentrancy/solidity_contract/2021.sol:193:64: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            return (institutions[assetInstitutionHash], assets[sha3(asset)], false);
                                                               ^---------^
/../data/reentrancy/solidity_contract/2021.sol:195:60: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (institutions[assetInstitutionHash], assets[sha3(asset)], registered[assetInstitutionHash]);
                                                           ^---------^
/../data/reentrancy/solidity_contract/2021.sol:195:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (institutions[assetInstitutionHash], assets[sha3(asset)], registered[assetInstitutionHash]);
                                                           ^---------^
/../data/reentrancy/solidity_contract/2021.sol:195:60: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return (institutions[assetInstitutionHash], assets[sha3(asset)], registered[assetInstitutionHash]);
                                                           ^---------^
/../data/reentrancy/solidity_contract/2021.sol:205:21: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        _bban[16] = 33;  
                    ^^
/../data/reentrancy/solidity_contract/2021.sol:206:21: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        _bban[17] = 14;  
                    ^^
/../data/reentrancy/solidity_contract/2021.sol:244:45: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (msg.sender == institutionOwners[sha3(_institution)]) {
                                            ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:244:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (msg.sender == institutionOwners[sha3(_institution)]) {
                                            ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:244:45: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        if (msg.sender == institutionOwners[sha3(_institution)]) {
                                            ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:250:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:250:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:250:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:256:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        return institutions[sha3("ETH", _institution[0], _institution[1], _institution[2], _institution[3])];
                            ^-----------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:256:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return institutions[sha3("ETH", _institution[0], _institution[1], _institution[2], _institution[3])];
                            ^-----------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:263:31: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (institutionOwners[sha3(_institution)] != 0) {
                              ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:263:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (institutionOwners[sha3(_institution)] != 0) {
                              ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:263:31: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        if (institutionOwners[sha3(_institution)] != 0) {
                              ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:266:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:266:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:266:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        institutionOwners[sha3(_institution)] = _address;
                          ^----------------^
/../data/reentrancy/solidity_contract/2021.sol:271:25: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!registered[sha3(_asset)]) {
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:271:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!registered[sha3(_asset)]) {
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:271:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        if (!registered[sha3(_asset)]) {
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:274:40: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:274:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:284:40: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:284:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:293:40: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:293:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 assetInstitutionHash = sha3(_asset, _institution);
                                       ^------------------------^
/../data/reentrancy/solidity_contract/2021.sol:306:25: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 asset = sha3(_asset);
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:306:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 asset = sha3(_asset);
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:306:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 asset = sha3(_asset);
                        ^----------^
/../data/reentrancy/solidity_contract/2021.sol:3:5: Warning: No visibility specified. Defaulting to "public". 
    function getNodeAddress(bytes32 _nodeName) constant returns(address);
    ^-------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:4:5: Warning: No visibility specified. Defaulting to "public". 
    function hasRelation(bytes32 _nodeName, bytes32 _relation, address _to) constant returns(bool);
    ^---------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function addNode(bytes32 _nodeName, address _nodeAddress) constant returns(bool);
    ^-------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress(bytes32 _name) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function setAmbiAddress(address _ambi, bytes32 _name) returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function immortality() checkAccess("owner") returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function remove() checkAccess("owner") returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:58:5: Warning: No visibility specified. Defaulting to "public". 
    function checkDepth(address self, uint n) constant returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function __dig(uint n) constant {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function setupStackDepthLib(address _stackDepthLib) immutable(address(stackDepthLib)) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function decodeIndirect(bytes _bban) constant returns(string, string, string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:171:5: Warning: No visibility specified. Defaulting to "public". 
    function parse(bytes32 _icap) constant returns(address, bytes32, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:186:34: Warning: Unused local variable.
        var (asset, institution, _) = decodeIndirect(bban);
                                 ^
/../data/reentrancy/solidity_contract/2021.sol:198:5: Warning: No visibility specified. Defaulting to "public". 
    function prepare(bytes _bban) constant returns(bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:212:5: Warning: No visibility specified. Defaulting to "public". 
    function mod9710(bytes _prepared) constant returns(uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:249:5: Warning: No visibility specified. Defaulting to "public". 
    function changeInstitutionOwner(string _institution, address _address) noValue() onlyInstitutionOwner(_institution) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function addr(bytes32 _institution) constant returns(address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:259:5: Warning: No visibility specified. Defaulting to "public". 
    function registerInstitution(string _institution, address _address) noValue() checkAccess("admin") returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:270:5: Warning: No visibility specified. Defaulting to "public". 
    function registerInstitutionAsset(string _asset, string _institution, address _address) noValue() onlyInstitutionOwner(_institution) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:283:5: Warning: No visibility specified. Defaulting to "public". 
    function updateInstitutionAsset(string _asset, string _institution, address _address) noValue() onlyInstitutionOwner(_institution) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:292:5: Warning: No visibility specified. Defaulting to "public". 
    function removeInstitutionAsset(string _asset, string _institution) noValue() onlyInstitutionOwner(_institution) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function registerAsset(string _asset, bytes32 _symbol) noValue() checkAccess("admin") returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:60:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return self.call.gas(GAS_PER_DEPTH * n)(0x21835af6, n - 1);
               ^------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:60:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return self.call.gas(GAS_PER_DEPTH * n)(0x21835af6, n - 1);
               ^-------------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:65:14: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        if (!address(this).delegatecall(0x21835af6, n - 1)) throw;
             ^-------------------------------------------^
/../data/reentrancy/solidity_contract/2021.sol:152:5: Warning: Function state mutability can be restricted to pure
    function decodeIndirect(bytes _bban) constant returns(string, string, string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:198:5: Warning: Function state mutability can be restricted to pure
    function prepare(bytes _bban) constant returns(bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/2021.sol:212:5: Warning: Function state mutability can be restricted to pure
    function mod9710(bytes _prepared) constant returns(uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
AmbiEnabled.remove (/../data/reentrancy/solidity_contract/2021.sol#43-49) allows anyone to destruct the contract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#suicidal[0m
INFO:Detectors:[93m
Reentrancy in AmbiEnabled.setAmbiAddress (/../data/reentrancy/solidity_contract/2021.sol#23-36):
	External calls:
	- ambiContract.getNodeAddress(_name) != address(this) (/../data/reentrancy/solidity_contract/2021.sol#28-32)
	- ! ambiContract.addNode(_name,address(this)) (/../data/reentrancy/solidity_contract/2021.sol#29-31)
	State variables written after the call(s):
	- ambiC (/../data/reentrancy/solidity_contract/2021.sol#34)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Safe.immutable (modifier @ /../data/reentrancy/solidity_contract/2021.sol#93-97) shadows built-in symbol "immutable"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in AmbiEnabled.setAmbiAddress (/../data/reentrancy/solidity_contract/2021.sol#23-36):
	External calls:
	- ambiContract.getNodeAddress(_name) != address(this) (/../data/reentrancy/solidity_contract/2021.sol#28-32)
	- ! ambiContract.addNode(_name,address(this)) (/../data/reentrancy/solidity_contract/2021.sol#29-31)
	State variables written after the call(s):
	- name (/../data/reentrancy/solidity_contract/2021.sol#33)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#188:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#193:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#195:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#250:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#256:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#263-265:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#266:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#271-273:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#274:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#284:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#293:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#306:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/2021.sol#244-246:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ambi.getNodeAddress (/../data/reentrancy/solidity_contract/2021.sol#3) should be declared external
Ambi.hasRelation (/../data/reentrancy/solidity_contract/2021.sol#4) should be declared external
Ambi.addNode (/../data/reentrancy/solidity_contract/2021.sol#5) should be declared external
AmbiEnabled.getAddress (/../data/reentrancy/solidity_contract/2021.sol#19-21) should be declared external
AmbiEnabled.setAmbiAddress (/../data/reentrancy/solidity_contract/2021.sol#23-36) should be declared external
AmbiEnabled.immortality (/../data/reentrancy/solidity_contract/2021.sol#38-41) should be declared external
AmbiEnabled.remove (/../data/reentrancy/solidity_contract/2021.sol#43-49) should be declared external
StackDepthLib.checkDepth (/../data/reentrancy/solidity_contract/2021.sol#58-61) should be declared external
StackDepthLib.__dig (/../data/reentrancy/solidity_contract/2021.sol#63-66) should be declared external
Safe.setupStackDepthLib (/../data/reentrancy/solidity_contract/2021.sol#100-103) should be declared external
RegistryICAP.parse (/../data/reentrancy/solidity_contract/2021.sol#171-196) should be declared external
RegistryICAP.changeInstitutionOwner (/../data/reentrancy/solidity_contract/2021.sol#249-252) should be declared external
RegistryICAP.addr (/../data/reentrancy/solidity_contract/2021.sol#255-257) should be declared external
RegistryICAP.registerInstitution (/../data/reentrancy/solidity_contract/2021.sol#259-268) should be declared external
RegistryICAP.registerInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#270-281) should be declared external
RegistryICAP.updateInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#283-290) should be declared external
RegistryICAP.removeInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#292-300) should be declared external
RegistryICAP.registerAsset (/../data/reentrancy/solidity_contract/2021.sol#302-313) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in StackDepthLib.checkDepth (/../data/reentrancy/solidity_contract/2021.sol#58-61):
	-self.call.gas(GAS_PER_DEPTH * n)(0x21835af6,n - 1) /../data/reentrancy/solidity_contract/2021.sol#60
Low level call in StackDepthLib.__dig (/../data/reentrancy/solidity_contract/2021.sol#63-66):
	-! address(this).delegatecall(0x21835af6,n - 1) /../data/reentrancy/solidity_contract/2021.sol#65
Low level call in Safe._unsafeSend (/../data/reentrancy/solidity_contract/2021.sol#129-131):
	-_to.call.value(_value)() /../data/reentrancy/solidity_contract/2021.sol#130
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_name' of AmbiEnabled.getAddress (/../data/reentrancy/solidity_contract/2021.sol#19) is not in mixedCase
Parameter '_ambi' of AmbiEnabled.setAmbiAddress (/../data/reentrancy/solidity_contract/2021.sol#23) is not in mixedCase
Parameter '_name' of AmbiEnabled.setAmbiAddress (/../data/reentrancy/solidity_contract/2021.sol#23) is not in mixedCase
Function 'StackDepthLib.__dig' (/../data/reentrancy/solidity_contract/2021.sol#63-66) is not in mixedCase
Parameter '_stackDepthLib' of Safe.setupStackDepthLib (/../data/reentrancy/solidity_contract/2021.sol#100) is not in mixedCase
Function 'Safe._safeFalse' (/../data/reentrancy/solidity_contract/2021.sol#119-121) is not in mixedCase
Function 'Safe._safeSend' (/../data/reentrancy/solidity_contract/2021.sol#123-127) is not in mixedCase
Parameter '_to' of Safe._safeSend (/../data/reentrancy/solidity_contract/2021.sol#123) is not in mixedCase
Parameter '_value' of Safe._safeSend (/../data/reentrancy/solidity_contract/2021.sol#123) is not in mixedCase
Function 'Safe._unsafeSend' (/../data/reentrancy/solidity_contract/2021.sol#129-131) is not in mixedCase
Parameter '_to' of Safe._unsafeSend (/../data/reentrancy/solidity_contract/2021.sol#129) is not in mixedCase
Parameter '_value' of Safe._unsafeSend (/../data/reentrancy/solidity_contract/2021.sol#129) is not in mixedCase
Function 'Safe._isContract' (/../data/reentrancy/solidity_contract/2021.sol#133-135) is not in mixedCase
Function 'Safe._isHuman' (/../data/reentrancy/solidity_contract/2021.sol#137-139) is not in mixedCase
Function 'Safe._setupNoCallback' (/../data/reentrancy/solidity_contract/2021.sol#142-144) is not in mixedCase
Function 'Safe._finishNoCallback' (/../data/reentrancy/solidity_contract/2021.sol#146-148) is not in mixedCase
Parameter '_bban' of RegistryICAP.decodeIndirect (/../data/reentrancy/solidity_contract/2021.sol#152) is not in mixedCase
Parameter '_icap' of RegistryICAP.parse (/../data/reentrancy/solidity_contract/2021.sol#171) is not in mixedCase
Parameter '_bban' of RegistryICAP.prepare (/../data/reentrancy/solidity_contract/2021.sol#198) is not in mixedCase
Parameter '_prepared' of RegistryICAP.mod9710 (/../data/reentrancy/solidity_contract/2021.sol#212) is not in mixedCase
Parameter '_institution' of RegistryICAP.changeInstitutionOwner (/../data/reentrancy/solidity_contract/2021.sol#249) is not in mixedCase
Parameter '_address' of RegistryICAP.changeInstitutionOwner (/../data/reentrancy/solidity_contract/2021.sol#249) is not in mixedCase
Parameter '_institution' of RegistryICAP.addr (/../data/reentrancy/solidity_contract/2021.sol#255) is not in mixedCase
Parameter '_institution' of RegistryICAP.registerInstitution (/../data/reentrancy/solidity_contract/2021.sol#259) is not in mixedCase
Parameter '_address' of RegistryICAP.registerInstitution (/../data/reentrancy/solidity_contract/2021.sol#259) is not in mixedCase
Parameter '_asset' of RegistryICAP.registerInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#270) is not in mixedCase
Parameter '_institution' of RegistryICAP.registerInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#270) is not in mixedCase
Parameter '_address' of RegistryICAP.registerInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#270) is not in mixedCase
Parameter '_asset' of RegistryICAP.updateInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#283) is not in mixedCase
Parameter '_institution' of RegistryICAP.updateInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#283) is not in mixedCase
Parameter '_address' of RegistryICAP.updateInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#283) is not in mixedCase
Parameter '_asset' of RegistryICAP.removeInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#292) is not in mixedCase
Parameter '_institution' of RegistryICAP.removeInstitutionAsset (/../data/reentrancy/solidity_contract/2021.sol#292) is not in mixedCase
Parameter '_asset' of RegistryICAP.registerAsset (/../data/reentrancy/solidity_contract/2021.sol#302) is not in mixedCase
Parameter '_symbol' of RegistryICAP.registerAsset (/../data/reentrancy/solidity_contract/2021.sol#302) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/2021.sol analyzed (5 contracts), 78 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/30046.sol:
/../data/reentrancy/solidity_contract/30046.sol:77:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TrustWallet(address first_user) public {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143-166) uses a dangerous strict equality:
	- require(bool)(users[new_user].time_added == 0)
	- require(bool)(users[new_user].time_removed == 0)
TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143-166) uses a dangerous strict equality:
	- require(bool)(users[new_user].time_added == 0)
	- require(bool)(users[new_user].time_removed == 0)
TrustWallet.isTransactionPending (/../data/reentrancy/solidity_contract/30046.sol#60-64) uses a dangerous strict equality:
	- transactions.length == 0
	- transactions[transactions.length - 1].time_initiated > 0 && transactions[transactions.length - 1].time_finalized == 0
TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143-166) uses a dangerous strict equality:
	- require(bool)(users[new_user].time_added == 0)
	- require(bool)(users[new_user].time_removed == 0)
TrustWallet.isTransactionPending (/../data/reentrancy/solidity_contract/30046.sol#60-64) uses a dangerous strict equality:
	- transactions.length == 0
	- transactions[transactions.length - 1].time_initiated > 0 && transactions[transactions.length - 1].time_finalized == 0
TrustWallet.onlyActiveUsersAllowed (/../data/reentrancy/solidity_contract/30046.sol#43-47) uses a dangerous strict equality:
	- require(bool)(users[msg.sender].time_removed == 0)
	- require(bool)(users[msg.sender].time_removed == 0)
TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143-166) uses a dangerous strict equality:
	- require(bool)(users[new_user].time_added == 0)
	- require(bool)(users[new_user].time_removed == 0)
TrustWallet.isTransactionPending (/../data/reentrancy/solidity_contract/30046.sol#60-64) uses a dangerous strict equality:
	- transactions.length == 0
	- transactions[transactions.length - 1].time_initiated > 0 && transactions[transactions.length - 1].time_finalized == 0
TrustWallet.onlyActiveUsersAllowed (/../data/reentrancy/solidity_contract/30046.sol#43-47) uses a dangerous strict equality:
	- require(bool)(users[msg.sender].time_removed == 0)
	- require(bool)(users[msg.sender].time_removed == 0)
TrustWallet.removeUser (/../data/reentrancy/solidity_contract/30046.sol#170-182) uses a dangerous strict equality:
	- require(bool)(users[userAddr].time_removed == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
TrustWallet.balance (/../data/reentrancy/solidity_contract/30046.sol#67-69) should be declared external
TrustWallet.transactionCount (/../data/reentrancy/solidity_contract/30046.sol#72-74) should be declared external
TrustWallet.fallback (/../data/reentrancy/solidity_contract/30046.sol#89) should be declared external
TrustWallet.initiateTransaction (/../data/reentrancy/solidity_contract/30046.sol#92-108) should be declared external
TrustWallet.executeTransaction (/../data/reentrancy/solidity_contract/30046.sol#113-120) should be declared external
TrustWallet.cancelTransaction (/../data/reentrancy/solidity_contract/30046.sol#125-137) should be declared external
TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143-166) should be declared external
TrustWallet.removeUser (/../data/reentrancy/solidity_contract/30046.sol#170-182) should be declared external
TrustWalletFactory.createWallet (/../data/reentrancy/solidity_contract/30046.sol#188-190) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/30046.sol:
	- pragma solidity^0.4.19 (/../data/reentrancy/solidity_contract/30046.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in TrustWallet.executeTransaction (/../data/reentrancy/solidity_contract/30046.sol#113-120):
	-transaction.execution_successful = transaction.destination.call.value(transaction.value)(transaction.data) /../data/reentrancy/solidity_contract/30046.sol#119
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'TrustWallet.TrustWallet' (/../data/reentrancy/solidity_contract/30046.sol#77-87) is not in mixedCase
Parameter 'first_user' of TrustWallet.TrustWallet (/../data/reentrancy/solidity_contract/30046.sol#77) is not in mixedCase
Parameter '_destination' of TrustWallet.initiateTransaction (/../data/reentrancy/solidity_contract/30046.sol#92) is not in mixedCase
Parameter '_value' of TrustWallet.initiateTransaction (/../data/reentrancy/solidity_contract/30046.sol#92) is not in mixedCase
Parameter '_data' of TrustWallet.initiateTransaction (/../data/reentrancy/solidity_contract/30046.sol#92) is not in mixedCase
Parameter 'new_user' of TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143) is not in mixedCase
Parameter 'new_user_time' of TrustWallet.addUser (/../data/reentrancy/solidity_contract/30046.sol#143) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/30046.sol analyzed (2 contracts), 22 result(s) found
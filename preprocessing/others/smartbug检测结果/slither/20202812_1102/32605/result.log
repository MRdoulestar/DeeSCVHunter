INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/32605.sol:
/../data/reentrancy/solidity_contract/32605.sol:11:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() { owner = msg.sender; }
    ^--------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:119:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MetaIdentityManager(uint _userTimeLock, uint _adminTimeLock, uint _adminRate, address _relayAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/32605.sol:26:27: Warning: Invoking events without "emit" prefix is deprecated.
    function () payable { Received(msg.sender, msg.value); }
                          ^-----------------------------^
/../data/reentrancy/solidity_contract/32605.sol:30:9: Warning: Invoking events without "emit" prefix is deprecated.
        Forwarded(destination, value, data);
        ^---------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogIdentityCreated(identity, msg.sender, owner,  recoveryKey);
        ^-----------------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogIdentityCreated(identity, msg.sender, owner,  recoveryKey);
        ^-----------------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:159:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogIdentityCreated(msg.sender, msg.sender, owner, recoveryKey);
        ^------------------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:175:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerAdded(identity, newOwner, sender);
        ^---------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:186:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerAdded(identity, newOwner, sender);
        ^---------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:198:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerRemoved(identity, owner, sender);
        ^--------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:209:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRecoveryChanged(identity, recoveryKey, sender);
        ^-----------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:219:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogMigrationInitiated(identity, newIdManager, sender);
        ^---------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:230:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogMigrationCanceled(identity, canceledManager, sender);
        ^-----------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:246:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogMigrationFinalized(identity, newIdManager, sender);
        ^---------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() { owner = msg.sender; }
    ^--------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable { Received(msg.sender, msg.value); }
    ^------------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function MetaIdentityManager(uint _userTimeLock, uint _adminTimeLock, uint _adminRate, address _relayAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/32605.sol:236:5: Warning: No visibility specified. Defaulting to "public". 
    function finalizeMigration(address sender, Proxy identity) onlyAuthorized onlyOlderOwner(identity, sender) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/32605.sol:13:5: Warning: Function state mutability can be restricted to view
    function isOwner(address addr) public returns(bool) { return addr == owner; }
    ^---------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/32605.sol:251:5: Warning: Function state mutability can be restricted to pure
    function checkMessageData(address a) internal constant returns (bool t) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MetaIdentityManager.checkMessageData (/../data/reentrancy/solidity_contract/32605.sol#251-257) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
Reentrancy in MetaIdentityManager.finalizeMigration (/../data/reentrancy/solidity_contract/32605.sol#236-247):
	External calls:
	- identity.transfer(newIdManager) (/../data/reentrancy/solidity_contract/32605.sol#241)
	State variables written after the call(s):
	- owners (/../data/reentrancy/solidity_contract/32605.sol#245)
	- recoveryKeys (/../data/reentrancy/solidity_contract/32605.sol#242)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
MetaIdentityManager.checkMessageData uses assembly (/../data/reentrancy/solidity_contract/32605.sol#251-257)
	- /../data/reentrancy/solidity_contract/32605.sol#253-257
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Owned.transfer (/../data/reentrancy/solidity_contract/32605.sol#15-19) should be declared external
Proxy.fallback (/../data/reentrancy/solidity_contract/32605.sol#26) should be declared external
Proxy.forward (/../data/reentrancy/solidity_contract/32605.sol#28-31) should be declared external
MetaIdentityManager.createIdentity (/../data/reentrancy/solidity_contract/32605.sol#131-136) should be declared external
MetaIdentityManager.createIdentityWithCall (/../data/reentrancy/solidity_contract/32605.sol#143-149) should be declared external
MetaIdentityManager.registerIdentity (/../data/reentrancy/solidity_contract/32605.sol#155-160) should be declared external
MetaIdentityManager.forwardTo (/../data/reentrancy/solidity_contract/32605.sol#163-165) should be declared external
MetaIdentityManager.addOwner (/../data/reentrancy/solidity_contract/32605.sol#168-176) should be declared external
MetaIdentityManager.addOwnerFromRecovery (/../data/reentrancy/solidity_contract/32605.sol#179-187) should be declared external
MetaIdentityManager.removeOwner (/../data/reentrancy/solidity_contract/32605.sol#190-199) should be declared external
MetaIdentityManager.changeRecovery (/../data/reentrancy/solidity_contract/32605.sol#202-210) should be declared external
MetaIdentityManager.initiateMigration (/../data/reentrancy/solidity_contract/32605.sol#213-220) should be declared external
MetaIdentityManager.cancelMigration (/../data/reentrancy/solidity_contract/32605.sol#223-231) should be declared external
MetaIdentityManager.finalizeMigration (/../data/reentrancy/solidity_contract/32605.sol#236-247) should be declared external
MetaIdentityManager.isRecovery (/../data/reentrancy/solidity_contract/32605.sol#267-269) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/32605.sol:
	- pragma solidity^0.4.15 (/../data/reentrancy/solidity_contract/32605.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Proxy.forward (/../data/reentrancy/solidity_contract/32605.sol#28-31):
	-require(bool)(destination.call.value(value)(data)) /../data/reentrancy/solidity_contract/32605.sol#29
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/../data/reentrancy/solidity_contract/32605.sol#11) is not in mixedCase
Function 'MetaIdentityManager.MetaIdentityManager' (/../data/reentrancy/solidity_contract/32605.sol#119-125) is not in mixedCase
Parameter '_userTimeLock' of MetaIdentityManager.MetaIdentityManager (/../data/reentrancy/solidity_contract/32605.sol#119) is not in mixedCase
Parameter '_adminTimeLock' of MetaIdentityManager.MetaIdentityManager (/../data/reentrancy/solidity_contract/32605.sol#119) is not in mixedCase
Parameter '_adminRate' of MetaIdentityManager.MetaIdentityManager (/../data/reentrancy/solidity_contract/32605.sol#119) is not in mixedCase
Parameter '_relayAddress' of MetaIdentityManager.MetaIdentityManager (/../data/reentrancy/solidity_contract/32605.sol#119) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/32605.sol analyzed (3 contracts), 26 result(s) found
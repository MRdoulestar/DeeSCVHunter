INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/37329.sol:
/../data/reentrancy/solidity_contract/37329.sol:34:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:89:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ICOBuyer(address _executor, address _crowdSale, uint256 _icoStartBlock, uint256 _purchaseCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:98:5: Warning: Invoking events without "emit" prefix is deprecated.
    CrowdSaleChanged(crowdSale);
    ^-------------------------^
/../data/reentrancy/solidity_contract/37329.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
    ICOStartBlockChanged(icoStartBlock);
    ^---------------------------------^
/../data/reentrancy/solidity_contract/37329.sol:108:5: Warning: Invoking events without "emit" prefix is deprecated.
    PurchaseCapChanged(purchaseCap);
    ^-----------------------------^
/../data/reentrancy/solidity_contract/37329.sol:113:5: Warning: Invoking events without "emit" prefix is deprecated.
    ExecutorChanged(_executor);
    ^------------------------^
/../data/reentrancy/solidity_contract/37329.sol:118:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance != 0);
            ^----------^
/../data/reentrancy/solidity_contract/37329.sol:119:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    owner.transfer(this.balance);
                   ^----------^
/../data/reentrancy/solidity_contract/37329.sol:120:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    EtherWithdrawn(this.balance);
                   ^----------^
/../data/reentrancy/solidity_contract/37329.sol:120:5: Warning: Invoking events without "emit" prefix is deprecated.
    EtherWithdrawn(this.balance);
    ^--------------------------^
/../data/reentrancy/solidity_contract/37329.sol:132:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensWithdrawn(contractTokenBalance);
    ^-----------------------------------^
/../data/reentrancy/solidity_contract/37329.sol:140:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (this.balance == 0) return;
        ^----------^
/../data/reentrancy/solidity_contract/37329.sol:142:42: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint256 purchaseAmount = Math.min256(this.balance, purchaseCap);
                                         ^----------^
/../data/reentrancy/solidity_contract/37329.sol:144:5: Warning: Invoking events without "emit" prefix is deprecated.
    ICOPurchased(purchaseAmount);
    ^--------------------------^
/../data/reentrancy/solidity_contract/37329.sol:150:5: Warning: Invoking events without "emit" prefix is deprecated.
    EtherReceived(msg.sender, msg.value);
    ^----------------------------------^
/../data/reentrancy/solidity_contract/37329.sol:23:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/../data/reentrancy/solidity_contract/37329.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/../data/reentrancy/solidity_contract/37329.sol:34:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:89:3: Warning: No visibility specified. Defaulting to "public". 
  function ICOBuyer(address _executor, address _crowdSale, uint256 _icoStartBlock, uint256 _purchaseCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:96:3: Warning: No visibility specified. Defaulting to "public". 
  function changeCrowdSale(address _crowdSale) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:101:3: Warning: No visibility specified. Defaulting to "public". 
  function changeICOStartBlock(uint256 _icoStartBlock) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:106:3: Warning: No visibility specified. Defaulting to "public". 
  function changePurchaseCap(uint256 _purchaseCap) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:111:3: Warning: No visibility specified. Defaulting to "public". 
  function changeExecutor(address _executor) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:117:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawEther() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:124:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawTokens(address _token) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:136:3: Warning: No visibility specified. Defaulting to "public". 
  function buyICO() onlyExecutorOrOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:149:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:4:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:8:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:12:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/37329.sol:16:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ICOBuyer.buyICO (/../data/reentrancy/solidity_contract/37329.sol#136-145) uses a dangerous strict equality:
	- this.balance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply should be constant (/../data/reentrancy/solidity_contract/37329.sol#22)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/../data/reentrancy/solidity_contract/37329.sol#23) should be declared external
ERC20Basic.transfer (/../data/reentrancy/solidity_contract/37329.sol#24) should be declared external
Ownable.transferOwnership (/../data/reentrancy/solidity_contract/37329.sol#47-51) should be declared external
ICOBuyer.changeCrowdSale (/../data/reentrancy/solidity_contract/37329.sol#96-99) should be declared external
ICOBuyer.changeICOStartBlock (/../data/reentrancy/solidity_contract/37329.sol#101-104) should be declared external
ICOBuyer.changePurchaseCap (/../data/reentrancy/solidity_contract/37329.sol#106-109) should be declared external
ICOBuyer.changeExecutor (/../data/reentrancy/solidity_contract/37329.sol#111-114) should be declared external
ICOBuyer.withdrawEther (/../data/reentrancy/solidity_contract/37329.sol#117-121) should be declared external
ICOBuyer.withdrawTokens (/../data/reentrancy/solidity_contract/37329.sol#124-133) should be declared external
ICOBuyer.buyICO (/../data/reentrancy/solidity_contract/37329.sol#136-145) should be declared external
ICOBuyer.fallback (/../data/reentrancy/solidity_contract/37329.sol#149-151) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/37329.sol:
	- pragma solidity^0.4.11 (/../data/reentrancy/solidity_contract/37329.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in ICOBuyer.buyICO (/../data/reentrancy/solidity_contract/37329.sol#136-145):
	-assert(bool)(crowdSale.call.value(purchaseAmount)()) /../data/reentrancy/solidity_contract/37329.sol#143
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/../data/reentrancy/solidity_contract/37329.sol#34-36) is not in mixedCase
Function 'ICOBuyer.ICOBuyer' (/../data/reentrancy/solidity_contract/37329.sol#89-94) is not in mixedCase
Parameter '_executor' of ICOBuyer.ICOBuyer (/../data/reentrancy/solidity_contract/37329.sol#89) is not in mixedCase
Parameter '_crowdSale' of ICOBuyer.ICOBuyer (/../data/reentrancy/solidity_contract/37329.sol#89) is not in mixedCase
Parameter '_icoStartBlock' of ICOBuyer.ICOBuyer (/../data/reentrancy/solidity_contract/37329.sol#89) is not in mixedCase
Parameter '_purchaseCap' of ICOBuyer.ICOBuyer (/../data/reentrancy/solidity_contract/37329.sol#89) is not in mixedCase
Parameter '_crowdSale' of ICOBuyer.changeCrowdSale (/../data/reentrancy/solidity_contract/37329.sol#96) is not in mixedCase
Parameter '_icoStartBlock' of ICOBuyer.changeICOStartBlock (/../data/reentrancy/solidity_contract/37329.sol#101) is not in mixedCase
Parameter '_purchaseCap' of ICOBuyer.changePurchaseCap (/../data/reentrancy/solidity_contract/37329.sol#106) is not in mixedCase
Parameter '_executor' of ICOBuyer.changeExecutor (/../data/reentrancy/solidity_contract/37329.sol#111) is not in mixedCase
Parameter '_token' of ICOBuyer.withdrawTokens (/../data/reentrancy/solidity_contract/37329.sol#124) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/37329.sol analyzed (4 contracts), 26 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39191.sol:
/../data/reentrancy/solidity_contract/39191.sol:18:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                        throw;
                        ^---^
/../data/reentrancy/solidity_contract/39191.sol:69:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                        throw;
                        ^---^
/../data/reentrancy/solidity_contract/39191.sol:83:77: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                                if (!accountAddress.call.value(value)()) {  throw; }
                                                                            ^---^
/../data/reentrancy/solidity_contract/39191.sol:5:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library AccountingLib {
^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39191.sol:29:13: Warning: Invoking events without "emit" prefix is deprecated.
            _Deposit(_from, accountAddress, value);
            ^------------------------------------^
/../data/reentrancy/solidity_contract/39191.sol:48:13: Warning: Invoking events without "emit" prefix is deprecated.
            _Withdrawal(accountAddress, value);
            ^--------------------------------^
/../data/reentrancy/solidity_contract/39191.sol:58:13: Warning: Invoking events without "emit" prefix is deprecated.
            _InsufficientFunds(accountAddress, value, balance);
            ^------------------------------------------------^
/../data/reentrancy/solidity_contract/39191.sol:93:21: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
                if (msg.gas < DEFAULT_SEND_GAS) {
                    ^-----^
/../data/reentrancy/solidity_contract/39191.sol:94:57: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
                    return sendRobust(toAddress, value, msg.gas);
                                                        ^-----^

INFO:Detectors:[91m
AccountingLib.withdraw (/../data/reentrancy/solidity_contract/39191.sol#78-88) sends eth to arbitrary user
	Dangerous calls:
	- ! accountAddress.send(value) (/../data/reentrancy/solidity_contract/39191.sol#82-84)
	- ! accountAddress.call.value(value)() (/../data/reentrancy/solidity_contract/39191.sol#83)
AccountingLib.sendRobust (/../data/reentrancy/solidity_contract/39191.sol#99-109) sends eth to arbitrary user
	Dangerous calls:
	- value > 0 && ! toAddress.send(value) (/../data/reentrancy/solidity_contract/39191.sol#100-107)
	- ! toAddress.call.gas(maxGas).value(value)() (/../data/reentrancy/solidity_contract/39191.sol#104-106)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39191.sol#18:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39191.sol#69:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39191.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39191.sol#93-95:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39191.sol#94:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
AccountingLib.Deposit (/../data/reentrancy/solidity_contract/39191.sol#28-30) should be declared external
AccountingLib.deposit (/../data/reentrancy/solidity_contract/39191.sol#37-40) should be declared external
AccountingLib.Withdrawal (/../data/reentrancy/solidity_contract/39191.sol#47-49) should be declared external
AccountingLib.InsufficientFunds (/../data/reentrancy/solidity_contract/39191.sol#57-59) should be declared external
AccountingLib.withdraw (/../data/reentrancy/solidity_contract/39191.sol#78-88) should be declared external
AccountingLib.sendRobust (/../data/reentrancy/solidity_contract/39191.sol#92-97) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in AccountingLib.withdraw (/../data/reentrancy/solidity_contract/39191.sol#78-88):
	-! accountAddress.call.value(value)() /../data/reentrancy/solidity_contract/39191.sol#83
Low level call in AccountingLib.sendRobust (/../data/reentrancy/solidity_contract/39191.sol#99-109):
	-! toAddress.call.gas(maxGas).value(value)() /../data/reentrancy/solidity_contract/39191.sol#104-106
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Event 'AccountingLib._Deposit' (/../data/reentrancy/solidity_contract/39191.sol#23) is not in CapWords
Event 'AccountingLib._Withdrawal' (/../data/reentrancy/solidity_contract/39191.sol#42) is not in CapWords
Event 'AccountingLib._InsufficientFunds' (/../data/reentrancy/solidity_contract/39191.sol#51) is not in CapWords
Function 'AccountingLib.Deposit' (/../data/reentrancy/solidity_contract/39191.sol#28-30) is not in mixedCase
Parameter '_from' of AccountingLib.Deposit (/../data/reentrancy/solidity_contract/39191.sol#28) is not in mixedCase
Function 'AccountingLib.Withdrawal' (/../data/reentrancy/solidity_contract/39191.sol#47-49) is not in mixedCase
Function 'AccountingLib.InsufficientFunds' (/../data/reentrancy/solidity_contract/39191.sol#57-59) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39191.sol analyzed (1 contracts), 22 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39705.sol:
/../data/reentrancy/solidity_contract/39705.sol:42:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TokenTracker(uint _restrictedShare) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:44:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_restrictedShare >= 100) { throw; }
                                   ^---^
/../data/reentrancy/solidity_contract/39705.sol:80:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (assignmentsClosed) { throw; }
                             ^---^
/../data/reentrancy/solidity_contract/39705.sol:128:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assignmentsClosed) { throw; }
                              ^---^
/../data/reentrancy/solidity_contract/39705.sol:134:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (restrictionsForAddr == 0) { throw; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:175:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time > now) { throw; }
                      ^---^
/../data/reentrancy/solidity_contract/39705.sol:186:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time > now) { throw; }
                      ^---^
/../data/reentrancy/solidity_contract/39705.sol:189:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (n >= N) { throw; }
                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:203:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (n == 0) { throw; }
                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:213:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (N > 0 && time <= phaseEndTime[N-1]) { throw; } 
                                              ^---^
/../data/reentrancy/solidity_contract/39705.sol:216:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time <= now) { throw; }
                       ^---^
/../data/reentrancy/solidity_contract/39705.sol:226:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (i >= N) { throw; }
                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:234:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (n >= N) { throw; }
                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:237:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (now >= phaseEndTime[n]) { throw; }
                                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:241:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (timeDelta > maxDelay[n]) { throw; }
                                   ^---^
/../data/reentrancy/solidity_contract/39705.sol:259:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (n >= N) { throw; }
                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:283:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function StepFunction(uint _phaseLength, uint _initialValue, uint _nSteps) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:285:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_nSteps > _phaseLength) { throw; } 
                                  ^---^
/../data/reentrancy/solidity_contract/39705.sol:291:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ( step * _nSteps != _initialValue) { throw; } 
                                            ^---^
/../data/reentrancy/solidity_contract/39705.sol:302:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (elapsedTime >= phaseLength) { throw; }
                                      ^---^
/../data/reentrancy/solidity_contract/39705.sol:495:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function FDC(address _masterAuth, string _name) TokenTracker(earlyContribShare) StepFunction(round1EndTime-round1StartTime, round1InitialBonus, round1BonusSteps) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:557:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/../data/reentrancy/solidity_contract/39705.sol:566:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (bytes4(hash) != checksum) { throw ; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:575:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (getState() != state.finalization) { throw; }
                                            ^---^
/../data/reentrancy/solidity_contract/39705.sol:647:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != exchangeRateAuth) { throw; }
                                          ^---^
/../data/reentrancy/solidity_contract/39705.sol:656:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != registrarAuth) { throw; }
                                       ^---^
/../data/reentrancy/solidity_contract/39705.sol:659:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (getState() != state.earlyContrib) { throw; }
                                            ^---^
/../data/reentrancy/solidity_contract/39705.sol:676:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != registrarAuth) { throw; }
                                       ^---^
/../data/reentrancy/solidity_contract/39705.sol:686:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/../data/reentrancy/solidity_contract/39705.sol:690:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (timestamp > now) { throw; }
                           ^---^
/../data/reentrancy/solidity_contract/39705.sol:700:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/../data/reentrancy/solidity_contract/39705.sol:706:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/../data/reentrancy/solidity_contract/39705.sol:711:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/../data/reentrancy/solidity_contract/39705.sol:724:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != registrarAuth) { throw; }
                                       ^---^
/../data/reentrancy/solidity_contract/39705.sol:739:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != masterAuth) { throw; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:742:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (getPhaseAtTime(now) >= phaseOfRound0) { throw; }
                                                ^---^
/../data/reentrancy/solidity_contract/39705.sol:750:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != masterAuth) { throw; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:758:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != masterAuth) { throw; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:766:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != masterAuth) { throw; }
                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:779:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (st != state.round0 && st != state.round1) { throw; }
                                                    ^---^
/../data/reentrancy/solidity_contract/39705.sol:782:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value < minDonation) { throw; }
                                   ^---^
/../data/reentrancy/solidity_contract/39705.sol:785:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiPerCHF == 0) { throw; } 
                          ^---^
/../data/reentrancy/solidity_contract/39705.sol:378:67: Warning: Using "years" as a unit denomination is deprecated.
  uint public constant finalizeEndTime      = finalizeStartTime + 1000 years;
                                                                  ^--------^
/../data/reentrancy/solidity_contract/39705.sol:563:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(addr);
                   ^----------^
/../data/reentrancy/solidity_contract/39705.sol:563:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
    bytes32 hash = sha256(addr);
                   ^----------^
/../data/reentrancy/solidity_contract/39705.sol:584:5: Warning: Invoking events without "emit" prefix is deprecated.
    BurnReceipt(addr, tokensBurned);
    ^-----------------------------^
/../data/reentrancy/solidity_contract/39705.sol:595:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return foundationWallet.call.value(this.balance)();
                                       ^----------^
/../data/reentrancy/solidity_contract/39705.sol:670:5: Warning: Invoking events without "emit" prefix is deprecated.
    EarlyContribReceipt(addr, tokenAmount, memo);
    ^------------------------------------------^
/../data/reentrancy/solidity_contract/39705.sol:798:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return foundationWallet.call.value(this.balance)();
                                       ^----------^
/../data/reentrancy/solidity_contract/39705.sol:836:5: Warning: Invoking events without "emit" prefix is deprecated.
    DonationReceipt(addr, currency, bonusMultiplier, timestamp, tokenAmount, 
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:42:3: Warning: No visibility specified. Defaulting to "public". 
  function TokenTracker(uint _restrictedShare) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:52:3: Warning: No visibility specified. Defaulting to "public". 
  function isUnrestricted() constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:57:3: Warning: No visibility specified. Defaulting to "public". 
  function multFracCeiling(uint x, uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:67:3: Warning: No visibility specified. Defaulting to "public". 
  function isRegistered(address addr, bool restricted) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:173:3: Warning: No visibility specified. Defaulting to "public". 
  function getPhaseAtTime(uint time) constant returns (uint n) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:184:3: Warning: No visibility specified. Defaulting to "public". 
  function isPhase(uint time, uint n) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:201:3: Warning: No visibility specified. Defaulting to "public". 
  function getPhaseStartTime(uint n) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:283:3: Warning: No visibility specified. Defaulting to "public". 
  function StepFunction(uint _phaseLength, uint _initialValue, uint _nSteps) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:300:3: Warning: No visibility specified. Defaulting to "public". 
  function getStepFunction(uint elapsedTime) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:333:3: Warning: No visibility specified. Defaulting to "public". 
  function targetReached(uint id) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:495:3: Warning: No visibility specified. Defaulting to "public". 
  function FDC(address _masterAuth, string _name) TokenTracker(earlyContribShare) StepFunction(round1EndTime-round1StartTime, round1InitialBonus, round1BonusSteps) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:537:3: Warning: No visibility specified. Defaulting to "public". 
  function getState() constant returns (state) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:542:3: Warning: No visibility specified. Defaulting to "public". 
  function getMultiplierAtTime(uint time) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:561:3: Warning: No visibility specified. Defaulting to "public". 
  function donateAsWithChecksum(address addr, bytes4 checksum) payable returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:573:3: Warning: No visibility specified. Defaulting to "public". 
  function finalize(address addr) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:594:3: Warning: No visibility specified. Defaulting to "public". 
  function empty() returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:645:3: Warning: No visibility specified. Defaulting to "public". 
  function setWeiPerCHF(uint weis) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:654:3: Warning: No visibility specified. Defaulting to "public". 
  function registerEarlyContrib(address addr, uint tokenAmount, bytes32 memo) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:674:3: Warning: No visibility specified. Defaulting to "public". 
  function registerOffChainDonation(address addr, uint timestamp, uint chfCents, string currency, bytes32 memo) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:722:3: Warning: No visibility specified. Defaulting to "public". 
  function delayDonPhase(uint donPhase, uint timedelta) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:737:3: Warning: No visibility specified. Defaulting to "public". 
  function setFoundationWallet(address newAddr) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:748:3: Warning: No visibility specified. Defaulting to "public". 
  function setExchangeRateAuth(address newAuth) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:756:3: Warning: No visibility specified. Defaulting to "public". 
  function setRegistrarAuth(address newAuth) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:764:3: Warning: No visibility specified. Defaulting to "public". 
  function setMasterAuth(address newAuth) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39705.sol:57:3: Warning: Function state mutability can be restricted to pure
  function multFracCeiling(uint x, uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
FDC.empty (/../data/reentrancy/solidity_contract/39705.sol#594-596) sends eth to arbitrary user
	Dangerous calls:
	- foundationWallet.call.value(this.balance)() (/../data/reentrancy/solidity_contract/39705.sol#595)
FDC.donateAs (/../data/reentrancy/solidity_contract/39705.sol#774-799) sends eth to arbitrary user
	Dangerous calls:
	- foundationWallet.call.value(this.balance)() (/../data/reentrancy/solidity_contract/39705.sol#798)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
FDC.bookDonation (/../data/reentrancy/solidity_contract/39705.sol#802-838) uses a dangerous strict equality:
	- targetReached && phase == getPhaseAtTime(now)
	- phase == phaseOfRound0
	- phase == phaseOfRound1
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
FDC.bookDonation.targetReached (local variable @ /../data/reentrancy/solidity_contract/39705.sol#807) shadows:
	- Targets.targetReached (function @ /../data/reentrancy/solidity_contract/39705.sol#333-335)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#44:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#175:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#186:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#189:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#203:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#213:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#226:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#237:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#241:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#285:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#291:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#302:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#557:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#566:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#575:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#647:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#656:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#659:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#676:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#686:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#690:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#700:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#706:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#711:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#724:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#739:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#742:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#750:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#758:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#766:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#779:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#782:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39705.sol#785:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Phased.isPhase (/../data/reentrancy/solidity_contract/39705.sol#184-198) should be declared external
FDC.donateAsWithChecksum (/../data/reentrancy/solidity_contract/39705.sol#561-570) should be declared external
FDC.finalize (/../data/reentrancy/solidity_contract/39705.sol#573-591) should be declared external
FDC.empty (/../data/reentrancy/solidity_contract/39705.sol#594-596) should be declared external
FDC.getStatus (/../data/reentrancy/solidity_contract/39705.sol#599-642) should be declared external
FDC.setWeiPerCHF (/../data/reentrancy/solidity_contract/39705.sol#645-651) should be declared external
FDC.registerEarlyContrib (/../data/reentrancy/solidity_contract/39705.sol#654-671) should be declared external
FDC.registerOffChainDonation (/../data/reentrancy/solidity_contract/39705.sol#674-719) should be declared external
FDC.delayDonPhase (/../data/reentrancy/solidity_contract/39705.sol#722-734) should be declared external
FDC.setFoundationWallet (/../data/reentrancy/solidity_contract/39705.sol#737-745) should be declared external
FDC.setExchangeRateAuth (/../data/reentrancy/solidity_contract/39705.sol#748-753) should be declared external
FDC.setRegistrarAuth (/../data/reentrancy/solidity_contract/39705.sol#756-761) should be declared external
FDC.setMasterAuth (/../data/reentrancy/solidity_contract/39705.sol#764-769) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/39705.sol:
	- pragma solidity^0.4.6 (/../data/reentrancy/solidity_contract/39705.sol#5): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in FDC.empty (/../data/reentrancy/solidity_contract/39705.sol#594-596):
	-foundationWallet.call.value(this.balance)() /../data/reentrancy/solidity_contract/39705.sol#595
Low level call in FDC.donateAs (/../data/reentrancy/solidity_contract/39705.sol#774-799):
	-foundationWallet.call.value(this.balance)() /../data/reentrancy/solidity_contract/39705.sol#798
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'TokenTracker.TokenTracker' (/../data/reentrancy/solidity_contract/39705.sol#42-47) is not in mixedCase
Parameter '_restrictedShare' of TokenTracker.TokenTracker (/../data/reentrancy/solidity_contract/39705.sol#42) is not in mixedCase
Variable 'Phased.N' (/../data/reentrancy/solidity_contract/39705.sol#165) is not in mixedCase
Function 'StepFunction.StepFunction' (/../data/reentrancy/solidity_contract/39705.sol#283-295) is not in mixedCase
Parameter '_phaseLength' of StepFunction.StepFunction (/../data/reentrancy/solidity_contract/39705.sol#283) is not in mixedCase
Parameter '_initialValue' of StepFunction.StepFunction (/../data/reentrancy/solidity_contract/39705.sol#283) is not in mixedCase
Parameter '_nSteps' of StepFunction.StepFunction (/../data/reentrancy/solidity_contract/39705.sol#283) is not in mixedCase
Parameter '_target' of Targets.setTarget (/../data/reentrancy/solidity_contract/39705.sol#340) is not in mixedCase
Constant 'Parameters.round0StartTime' (/../data/reentrancy/solidity_contract/39705.sol#366) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round1StartTime' (/../data/reentrancy/solidity_contract/39705.sol#370) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round0EndTime' (/../data/reentrancy/solidity_contract/39705.sol#373) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round1EndTime' (/../data/reentrancy/solidity_contract/39705.sol#374) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.finalizeStartTime' (/../data/reentrancy/solidity_contract/39705.sol#375) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.finalizeEndTime' (/../data/reentrancy/solidity_contract/39705.sol#378) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.maxRoundDelay' (/../data/reentrancy/solidity_contract/39705.sol#382) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.gracePeriodAfterRound0Target' (/../data/reentrancy/solidity_contract/39705.sol#386) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.gracePeriodAfterRound1Target' (/../data/reentrancy/solidity_contract/39705.sol#387) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.tokensPerCHF' (/../data/reentrancy/solidity_contract/39705.sol#392) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.minDonation' (/../data/reentrancy/solidity_contract/39705.sol#395) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round0Bonus' (/../data/reentrancy/solidity_contract/39705.sol#398) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round1InitialBonus' (/../data/reentrancy/solidity_contract/39705.sol#401) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round1BonusSteps' (/../data/reentrancy/solidity_contract/39705.sol#404) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.millionInCents' (/../data/reentrancy/solidity_contract/39705.sol#407) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round0Target' (/../data/reentrancy/solidity_contract/39705.sol#408) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.round1Target' (/../data/reentrancy/solidity_contract/39705.sol#409) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Parameters.earlyContribShare' (/../data/reentrancy/solidity_contract/39705.sol#413) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'FDC.FDC' (/../data/reentrancy/solidity_contract/39705.sol#495-532) is not in mixedCase
Parameter '_masterAuth' of FDC.FDC (/../data/reentrancy/solidity_contract/39705.sol#495) is not in mixedCase
Parameter '_name' of FDC.FDC (/../data/reentrancy/solidity_contract/39705.sol#495) is not in mixedCase
Enum 'FDC.state' (/../data/reentrancy/solidity_contract/39705.sol#425-434) is not in CapWords
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39705.sol analyzed (6 contracts), 89 result(s) found
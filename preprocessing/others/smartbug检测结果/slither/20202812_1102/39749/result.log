INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39749.sol:
/../data/reentrancy/solidity_contract/39749.sol:19:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:24:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/../data/reentrancy/solidity_contract/39749.sol:44:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(a, b)) throw;
                              ^---^
/../data/reentrancy/solidity_contract/39749.sol:53:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToSubtract(a, b)) throw;
                                   ^---^
/../data/reentrancy/solidity_contract/39749.sol:64:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < deadline) throw;
                            ^---^
/../data/reentrancy/solidity_contract/39749.sol:70:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!emergency) throw;
                        ^---^
/../data/reentrancy/solidity_contract/39749.sol:108:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherollCrowdfund(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:134:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (crowdsaleClosed) throw;
                             ^---^
/../data/reentrancy/solidity_contract/39749.sol:137:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;      
                            ^---^
/../data/reentrancy/solidity_contract/39749.sol:146:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/../data/reentrancy/solidity_contract/39749.sol:154:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/../data/reentrancy/solidity_contract/39749.sol:201:74: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if(!etherollBeneficiary.send(etherollBeneficiaryAmount)) throw;
                                                                         ^---^
/../data/reentrancy/solidity_contract/39749.sol:144:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogFundTransfer(msg.sender, msg.value, true); 
                ^------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:152:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogFundTransfer(msg.sender, msg.value, true); 
                ^------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:174:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogGoalReached(bankRollBeneficiary, amountRaised);           
            ^-----------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:189:42: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            bankrollBeneficiaryAmount = (this.balance*80)/100;   
                                         ^----------^
/../data/reentrancy/solidity_contract/39749.sol:195:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogFundTransfer(bankRollBeneficiary, bankrollBeneficiaryAmount, false);
                ^--------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:198:45: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                etherollBeneficiaryAmount = this.balance;                  
                                            ^----------^
/../data/reentrancy/solidity_contract/39749.sol:204:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogFundTransfer(etherollBeneficiary, etherollBeneficiaryAmount, false);                 
                ^--------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:221:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogFundTransfer(_addressToRefund, amount, false);
                ^----------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _receiver, uint _amount) returns (bool success) { }
    ^---------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:7:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address _receiver, uint _amount) returns (bool success) { }
                      ^---------------^
/../data/reentrancy/solidity_contract/39749.sol:7:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address _receiver, uint _amount) returns (bool success) { }
                                         ^----------^
/../data/reentrancy/solidity_contract/39749.sol:7:65: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address _receiver, uint _amount) returns (bool success) { }
                                                                ^----------^
/../data/reentrancy/solidity_contract/39749.sol:10:5: Warning: No visibility specified. Defaulting to "public". 
    function priviledgedAddressBurnUnsoldCoins(){ }
    ^---------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:28:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerTransferOwnership(address newOwner)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:108:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherollCrowdfund(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:244:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerBurnUnsoldTokens() onlyOwner onlyAfterDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:7:5: Warning: Function state mutability can be restricted to pure
    function transfer(address _receiver, uint _amount) returns (bool success) { }
    ^---------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:10:5: Warning: Function state mutability can be restricted to pure
    function priviledgedAddressBurnUnsoldCoins(){ }
    ^---------------------------------------------^
/../data/reentrancy/solidity_contract/39749.sol:39:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39749.sol:48:5: Warning: Function state mutability can be restricted to pure
    function safeToSubtract(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in EtherollCrowdfund.safeWithdraw (/../data/reentrancy/solidity_contract/39749.sol#168-213):
	External calls:
	- calcRefund(msg.sender) (/../data/reentrancy/solidity_contract/39749.sol#182)
	External calls sending eth:
	- calcRefund(msg.sender) (/../data/reentrancy/solidity_contract/39749.sol#182)
	- bankRollBeneficiary.send(bankrollBeneficiaryAmount) (/../data/reentrancy/solidity_contract/39749.sol#192-211)
	State variables written after the call(s):
	- fundingGoalReached (/../data/reentrancy/solidity_contract/39749.sol#209)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[92m
Reentrancy in EtherollCrowdfund.fallback (/../data/reentrancy/solidity_contract/39749.sol#128-165):
	External calls:
	- tokenReward.transfer(msg.sender,((msg.value * price) / price) * 2) (/../data/reentrancy/solidity_contract/39749.sol#143-147)
	- tokenReward.transfer(msg.sender,(msg.value * price) / price) (/../data/reentrancy/solidity_contract/39749.sol#151-155)
	State variables written after the call(s):
	- amountRaised (/../data/reentrancy/solidity_contract/39749.sol#160)
	- balanceOf (/../data/reentrancy/solidity_contract/39749.sol#163)
Reentrancy in EtherollCrowdfund.safeWithdraw (/../data/reentrancy/solidity_contract/39749.sol#168-213):
	External calls:
	- calcRefund(msg.sender) (/../data/reentrancy/solidity_contract/39749.sol#182)
	State variables written after the call(s):
	- bankrollBeneficiaryAmount (/../data/reentrancy/solidity_contract/39749.sol#189)
Reentrancy in EtherollCrowdfund.safeWithdraw (/../data/reentrancy/solidity_contract/39749.sol#168-213):
	External calls:
	- calcRefund(msg.sender) (/../data/reentrancy/solidity_contract/39749.sol#182)
	External calls sending eth:
	- calcRefund(msg.sender) (/../data/reentrancy/solidity_contract/39749.sol#182)
	- bankRollBeneficiary.send(bankrollBeneficiaryAmount) (/../data/reentrancy/solidity_contract/39749.sol#192-211)
	State variables written after the call(s):
	- etherollBeneficiaryAmount (/../data/reentrancy/solidity_contract/39749.sol#198)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
EtherollCrowdfund.price should be constant (/../data/reentrancy/solidity_contract/39749.sol#87)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#24:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#44:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#146:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#64:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39749.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
token.transfer (/../data/reentrancy/solidity_contract/39749.sol#7) should be declared external
token.priviledgedAddressBurnUnsoldCoins (/../data/reentrancy/solidity_contract/39749.sol#10) should be declared external
owned.ownerTransferOwnership (/../data/reentrancy/solidity_contract/39749.sol#28-32) should be declared external
EtherollCrowdfund.fallback (/../data/reentrancy/solidity_contract/39749.sol#128-165) should be declared external
EtherollCrowdfund.safeWithdraw (/../data/reentrancy/solidity_contract/39749.sol#168-213) should be declared external
EtherollCrowdfund.emergencyWithdraw (/../data/reentrancy/solidity_contract/39749.sol#230-233) should be declared external
EtherollCrowdfund.ownerSetEmergencyStatus (/../data/reentrancy/solidity_contract/39749.sol#236-241) should be declared external
EtherollCrowdfund.ownerBurnUnsoldTokens (/../data/reentrancy/solidity_contract/39749.sol#244-246) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/39749.sol:
	- pragma solidity^0.4.2 (/../data/reentrancy/solidity_contract/39749.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in EtherollCrowdfund.calcRefund (/../data/reentrancy/solidity_contract/39749.sol#216-226):
	-_addressToRefund.call.value(amount)() /../data/reentrancy/solidity_contract/39749.sol#220-224
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'token' (/../data/reentrancy/solidity_contract/39749.sol#4-12) is not in CapWords
Contract 'owned' (/../data/reentrancy/solidity_contract/39749.sol#15-34) is not in CapWords
Function 'EtherollCrowdfund.EtherollCrowdfund' (/../data/reentrancy/solidity_contract/39749.sol#108-125) is not in mixedCase
Parameter '_ifSuccessfulSendToBeneficiary' of EtherollCrowdfund.EtherollCrowdfund (/../data/reentrancy/solidity_contract/39749.sol#110) is not in mixedCase
Parameter '_ifSuccessfulSendToEtheroll' of EtherollCrowdfund.EtherollCrowdfund (/../data/reentrancy/solidity_contract/39749.sol#112) is not in mixedCase
Parameter '_fundingGoalInEthers' of EtherollCrowdfund.EtherollCrowdfund (/../data/reentrancy/solidity_contract/39749.sol#114) is not in mixedCase
Parameter '_durationInMinutes' of EtherollCrowdfund.EtherollCrowdfund (/../data/reentrancy/solidity_contract/39749.sol#116) is not in mixedCase
Parameter '_addressOfTokenUsedAsReward' of EtherollCrowdfund.EtherollCrowdfund (/../data/reentrancy/solidity_contract/39749.sol#118) is not in mixedCase
Parameter '_addressToRefund' of EtherollCrowdfund.calcRefund (/../data/reentrancy/solidity_contract/39749.sol#216) is not in mixedCase
Parameter '_newEmergencyStatus' of EtherollCrowdfund.ownerSetEmergencyStatus (/../data/reentrancy/solidity_contract/39749.sol#236) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39749.sol analyzed (4 contracts), 35 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39912.sol:
/../data/reentrancy/solidity_contract/39912.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:11:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/../data/reentrancy/solidity_contract/39912.sol:24:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function CampaignBeneficiary() {
        ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:28:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Resilience.call(setBeneficiarySig)) throw;
                                                     ^---^
/../data/reentrancy/solidity_contract/39912.sol:32:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(msg.sender != Resilience) throw;
                                         ^---^
/../data/reentrancy/solidity_contract/39912.sol:37:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!Resilience.call.value(msg.value)(buySig)) throw;
                                                               ^---^
/../data/reentrancy/solidity_contract/39912.sol:40:75: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!Resilience.call(transferSig, msg.sender, msg.value)) throw;
                                                                          ^---^
/../data/reentrancy/solidity_contract/39912.sol:45:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!Resilience.call(sellSig, _value)) throw;
                                                       ^---^
/../data/reentrancy/solidity_contract/39912.sol:49:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!msg.sender.send(_value)) throw;
                                              ^---^
/../data/reentrancy/solidity_contract/39912.sol:54:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Resilience.call(closeCampaignSig)) throw;
                                                    ^---^
/../data/reentrancy/solidity_contract/39912.sol:27:47: Warning: "sha3" has been deprecated in favour of "keccak256"
            bytes4 setBeneficiarySig = bytes4(sha3("setBeneficiary()"));
                                              ^----------------------^
/../data/reentrancy/solidity_contract/39912.sol:36:40: Warning: "sha3" has been deprecated in favour of "keccak256"
                bytes4 buySig = bytes4(sha3("buy()"));
                                       ^-----------^
/../data/reentrancy/solidity_contract/39912.sol:39:45: Warning: "sha3" has been deprecated in favour of "keccak256"
                bytes4 transferSig = bytes4(sha3("transfer(address,uint256)"));
                                            ^-------------------------------^
/../data/reentrancy/solidity_contract/39912.sol:44:41: Warning: "sha3" has been deprecated in favour of "keccak256"
                bytes4 sellSig = bytes4(sha3("sell(uint256)"));
                                        ^-------------------^
/../data/reentrancy/solidity_contract/39912.sol:53:46: Warning: "sha3" has been deprecated in favour of "keccak256"
            bytes4 closeCampaignSig = bytes4(sha3("closeCampaign()"));
                                             ^---------------------^
/../data/reentrancy/solidity_contract/39912.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:24:9: Warning: No visibility specified. Defaulting to "public". 
        function CampaignBeneficiary() {
        ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:31:9: Warning: No visibility specified. Defaulting to "public". 
        function() payable {
        ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:43:9: Warning: No visibility specified. Defaulting to "public". 
        function sell(uint256 _value) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:48:9: Warning: No visibility specified. Defaulting to "public". 
        function withdraw(uint256 _value) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39912.sol:52:9: Warning: No visibility specified. Defaulting to "public". 
        function closeCampaign() onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#11:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#27:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#28:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#32:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#36:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#39:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#40:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#44:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#45:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#49:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#53:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39912.sol#54:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/../data/reentrancy/solidity_contract/39912.sol#15-17) should be declared external
CampaignBeneficiary.fallback (/../data/reentrancy/solidity_contract/39912.sol#31-33) should be declared external
CampaignBeneficiary.simulatePathwayFromBeneficiary (/../data/reentrancy/solidity_contract/39912.sol#35-41) should be declared external
CampaignBeneficiary.sell (/../data/reentrancy/solidity_contract/39912.sol#43-46) should be declared external
CampaignBeneficiary.withdraw (/../data/reentrancy/solidity_contract/39912.sol#48-50) should be declared external
CampaignBeneficiary.closeCampaign (/../data/reentrancy/solidity_contract/39912.sol#52-55) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/39912.sol:
	- pragma solidity^0.4.6 (/../data/reentrancy/solidity_contract/39912.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in CampaignBeneficiary.CampaignBeneficiary (/../data/reentrancy/solidity_contract/39912.sol#24-29):
	-! Resilience.call(setBeneficiarySig) /../data/reentrancy/solidity_contract/39912.sol#28
Low level call in CampaignBeneficiary.simulatePathwayFromBeneficiary (/../data/reentrancy/solidity_contract/39912.sol#35-41):
	-! Resilience.call.value(msg.value)(buySig) /../data/reentrancy/solidity_contract/39912.sol#37
	-! Resilience.call(transferSig,msg.sender,msg.value) /../data/reentrancy/solidity_contract/39912.sol#40
Low level call in CampaignBeneficiary.sell (/../data/reentrancy/solidity_contract/39912.sol#43-46):
	-! Resilience.call(sellSig,_value) /../data/reentrancy/solidity_contract/39912.sol#45
Low level call in CampaignBeneficiary.closeCampaign (/../data/reentrancy/solidity_contract/39912.sol#52-55):
	-! Resilience.call(closeCampaignSig) /../data/reentrancy/solidity_contract/39912.sol#54
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'owned' (/../data/reentrancy/solidity_contract/39912.sol#3-18) is not in CapWords
Function 'CampaignBeneficiary.CampaignBeneficiary' (/../data/reentrancy/solidity_contract/39912.sol#24-29) is not in mixedCase
Parameter '_value' of CampaignBeneficiary.sell (/../data/reentrancy/solidity_contract/39912.sol#43) is not in mixedCase
Parameter '_value' of CampaignBeneficiary.withdraw (/../data/reentrancy/solidity_contract/39912.sol#48) is not in mixedCase
Variable 'CampaignBeneficiary.Resilience' (/../data/reentrancy/solidity_contract/39912.sol#22) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39912.sol analyzed (2 contracts), 29 result(s) found
INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39973.sol:
/../data/reentrancy/solidity_contract/39973.sol:28:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/../data/reentrancy/solidity_contract/39973.sol:176:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:156:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/../data/reentrancy/solidity_contract/39973.sol:160:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approve(_from, _spender, _value);
        ^------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:239:25: Warning: "sha3" has been deprecated in favour of "keccak256"
        allowedForwards[sha3(_msgSig)] = _forward;
                        ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:239:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        allowedForwards[sha3(_msgSig)] = _forward;
                        ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:239:25: Warning: The provided argument of type bytes4 is not implicitly convertible to expected type bytes memory.
        allowedForwards[sha3(_msgSig)] = _forward;
                        ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:368:41: Warning: "sha3" has been deprecated in favour of "keccak256"
        return _forward(allowedForwards[sha3(_data[0], _data[1], _data[2], _data[3])], _data);
                                        ^------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:368:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return _forward(allowedForwards[sha3(_data[0], _data[1], _data[2], _data[3])], _data);
                                        ^------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:383:34: Warning: "sha3" has been deprecated in favour of "keccak256"
        _forward(allowedForwards[sha3(msg.sig)], msg.data);
                                 ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:383:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        _forward(allowedForwards[sha3(msg.sig)], msg.data);
                                 ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:383:34: Warning: The provided argument of type bytes4 is not implicitly convertible to expected type bytes memory.
        _forward(allowedForwards[sha3(msg.sig)], msg.data);
                                 ^-----------^
/../data/reentrancy/solidity_contract/39973.sol:4:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw(address _to, uint _value) returns(bool);
    ^--------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawWithReference(address _to, uint _value, string _reference) returns(bool);
    ^----------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function isCreated(bytes32 _symbol) constant returns(bool);
    ^---------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function baseUnit(bytes32 _symbol) constant returns(uint8);
    ^---------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function name(bytes32 _symbol) constant returns(string);
    ^------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function description(bytes32 _symbol) constant returns(string);
    ^-------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function isReissuable(bytes32 _symbol) constant returns(bool);
    ^------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 _symbol) constant returns(address);
    ^--------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:52:5: Warning: No visibility specified. Defaulting to "public". 
    function isOwner(address _owner, bytes32 _symbol) constant returns(bool);
    ^-----------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply(bytes32 _symbol) constant returns(uint);
    ^-----------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:54:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _holder, bytes32 _symbol) constant returns(uint);
    ^--------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value, bytes32 _symbol) returns(bool);
    ^-------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAP(bytes32 _icap, uint _value) returns(bool);
    ^----------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool);
    ^------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:58:5: Warning: No visibility specified. Defaulting to "public". 
    function transferWithReference(address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);
    ^---------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:59:5: Warning: No visibility specified. Defaulting to "public". 
    function proxyTransferWithReference(address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);
    ^--------------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:60:5: Warning: No visibility specified. Defaulting to "public". 
    function proxyTransferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool);
    ^-----------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:61:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint _value, bytes32 _symbol) returns(bool);
    ^-----------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function proxyApprove(address _spender, uint _value, bytes32 _symbol) returns(bool);
    ^----------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _from, address _spender, bytes32 _symbol) constant returns(uint);
    ^------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value, bytes32 _symbol) returns(bool);
    ^--------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);
    ^----------------------------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFromToICAP(address _from, bytes32 _icap, uint _value) returns(bool);
    ^-----------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) returns(bool);
    ^-------------------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function proxyTransferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);
    ^---------------------------------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function proxyTransferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) returns(bool);
    ^------------------------------------------------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function setCosignerAddress(address _address, bytes32 _symbol) returns(bool);
    ^---------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function setCosignerAddressForUser(address _address) returns(bool);
    ^-----------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function proxySetCosignerAddress(address _address, bytes32 _symbol) returns(bool);
    ^--------------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:83:5: Warning: No visibility specified. Defaulting to "public". 
    function init(address _multiAsset, bytes32 _symbol) immutable(address(multiAsset)) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function setName(string _name) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:107:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:111:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _from, address _spender) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function transferWithReference(address _to, uint _value, string _reference) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAP(bytes32 _icap, uint _value) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint _value) onlyHuman() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:151:5: Warning: No visibility specified. Defaulting to "public". 
    function setCosignerAddress(address _cosigner) onlyHuman() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function emitTransfer(address _from, address _to, uint _value) onlyMultiAsset() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:159:5: Warning: No visibility specified. Defaulting to "public". 
    function emitApprove(address _from, address _spender, uint _value) onlyMultiAsset() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:163:5: Warning: No visibility specified. Defaulting to "public". 
    function sendToOwner() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:168:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns(uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:176:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:200:5: Warning: No visibility specified. Defaulting to "public". 
    function updateRefundGas() onlyContractOwner() returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:201:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas;
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:203:35: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint refund = (startGas - msg.gas + refundGas) * tx.gasprice;
                                  ^-----^
/../data/reentrancy/solidity_contract/39973.sol:211:32: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        refundGas = startGas - msg.gas;
                               ^-----^
/../data/reentrancy/solidity_contract/39973.sol:203:9: Warning: Unused local variable.
        uint refund = (startGas - msg.gas + refundGas) * tx.gasprice;
        ^---------^
/../data/reentrancy/solidity_contract/39973.sol:215:5: Warning: No visibility specified. Defaulting to "public". 
    function setOperationsCallGas(uint _transfer,uint _transferToICAP,uint _transferWithReference,uint _transferToICAPWithReference,uint _approve,uint _forward,uint _setCosigner) onlyContractOwner() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:226:5: Warning: No visibility specified. Defaulting to "public". 
    function setupTreasury(address _treasury, uint _txGasPriceLimit) payable onlyContractOwner() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:238:5: Warning: No visibility specified. Defaulting to "public". 
    function setForward(bytes4 _msgSig, address _forward) onlyContractOwner() returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:251:36: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint refund = (_startGas - msg.gas + refundGas) * tx.gasprice;
                                   ^-----^
/../data/reentrancy/solidity_contract/39973.sol:260:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + transferCallGas;
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:268:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + transferToICAPCallGas;
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:276:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + transferWithReferenceCallGas + _stringGas(_reference);
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:284:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + transferToICAPWithReferenceCallGas + _stringGas(_reference);
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:292:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + approveCallGas;
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:300:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + setCosignerCallGas;
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:307:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:313:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAP(bytes32 _icap, uint _value) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:319:5: Warning: No visibility specified. Defaulting to "public". 
    function transferWithReference(address _to, uint _value, string _reference) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:325:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:331:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint _value) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:337:5: Warning: No visibility specified. Defaulting to "public". 
    function setCosignerAddress(address _cosigner) returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:343:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTransfer(address _to, uint _value) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:347:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTransferToICAP(bytes32 _icap, uint _value) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:351:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTransferWithReference(address _to, uint _value, string _reference) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:355:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTransferToICAPWithReference(bytes32 _icap, uint _value, string _reference) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:359:5: Warning: No visibility specified. Defaulting to "public". 
    function checkApprove(address _spender, uint _value) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:363:5: Warning: No visibility specified. Defaulting to "public". 
    function checkSetCosignerAddress(address _cosigner) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:367:5: Warning: No visibility specified. Defaulting to "public". 
    function checkForward(bytes _data) constant returns(bool, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:372:25: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint startGas = msg.gas + forwardCallGas + (_data.length * 50);  
                        ^-----^
/../data/reentrancy/solidity_contract/39973.sol:382:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:243:5: Warning: Function state mutability can be restricted to pure
    function _stringGas(string _string) constant internal returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39973.sol:344:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _transfer(_to, _value);
               ^--------------------^
/../data/reentrancy/solidity_contract/39973.sol:348:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _transferToICAP(_icap, _value);
               ^----------------------------^
/../data/reentrancy/solidity_contract/39973.sol:352:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _transferWithReference(_to, _value, _reference);
               ^---------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:356:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _transferToICAPWithReference(_icap, _value, _reference);
               ^-----------------------------------------------------^
/../data/reentrancy/solidity_contract/39973.sol:360:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _approve(_spender, _value);
               ^------------------------^
/../data/reentrancy/solidity_contract/39973.sol:364:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _setCosignerAddress(_cosigner);
               ^----------------------------^
/../data/reentrancy/solidity_contract/39973.sol:368:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return _forward(allowedForwards[sha3(_data[0], _data[1], _data[2], _data[3])], _data);
               ^----------------------------------------------------------------------------^

INFO:Detectors:[93m
Reentrancy in GMT.updateRefundGas (/../data/reentrancy/solidity_contract/39973.sol#200-213):
	External calls:
	- ! _refund(1) (/../data/reentrancy/solidity_contract/39973.sol#208-210)
	State variables written after the call(s):
	- refundGas (/../data/reentrancy/solidity_contract/39973.sol#211)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMin.immutable (modifier @ /../data/reentrancy/solidity_contract/39973.sol#15-19) shadows built-in symbol "immutable"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
GMT.setOperationsCallGas._transfer (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._transfer (function @ /../data/reentrancy/solidity_contract/39973.sol#259-265)
GMT.setOperationsCallGas._transferToICAP (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._transferToICAP (function @ /../data/reentrancy/solidity_contract/39973.sol#267-273)
GMT.setOperationsCallGas._transferWithReference (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._transferWithReference (function @ /../data/reentrancy/solidity_contract/39973.sol#275-281)
GMT.setOperationsCallGas._transferToICAPWithReference (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._transferToICAPWithReference (function @ /../data/reentrancy/solidity_contract/39973.sol#283-289)
GMT.setOperationsCallGas._approve (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._approve (function @ /../data/reentrancy/solidity_contract/39973.sol#291-297)
GMT.setOperationsCallGas._forward (local variable @ /../data/reentrancy/solidity_contract/39973.sol#215) shadows:
	- GMT._forward (function @ /../data/reentrancy/solidity_contract/39973.sol#371-380)
GMT.setForward._forward (local variable @ /../data/reentrancy/solidity_contract/39973.sol#238) shadows:
	- GMT._forward (function @ /../data/reentrancy/solidity_contract/39973.sol#371-380)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in AssetMin.init (/../data/reentrancy/solidity_contract/39973.sol#83-91):
	External calls:
	- ! ma.isCreated(_symbol) (/../data/reentrancy/solidity_contract/39973.sol#85-87)
	State variables written after the call(s):
	- multiAsset (/../data/reentrancy/solidity_contract/39973.sol#88)
	- symbol (/../data/reentrancy/solidity_contract/39973.sol#89)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#28:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#201:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#203:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#211:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#239:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#251:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#260:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#268:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#276:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#284:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#292:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#300:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#368:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#372:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39973.sol#383:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
EtherTreasuryInterface.withdraw (/../data/reentrancy/solidity_contract/39973.sol#4) should be declared external
EtherTreasuryInterface.withdrawWithReference (/../data/reentrancy/solidity_contract/39973.sol#5) should be declared external
MultiAsset.isCreated (/../data/reentrancy/solidity_contract/39973.sol#46) should be declared external
MultiAsset.baseUnit (/../data/reentrancy/solidity_contract/39973.sol#47) should be declared external
MultiAsset.name (/../data/reentrancy/solidity_contract/39973.sol#48) should be declared external
MultiAsset.description (/../data/reentrancy/solidity_contract/39973.sol#49) should be declared external
MultiAsset.isReissuable (/../data/reentrancy/solidity_contract/39973.sol#50) should be declared external
MultiAsset.owner (/../data/reentrancy/solidity_contract/39973.sol#51) should be declared external
MultiAsset.isOwner (/../data/reentrancy/solidity_contract/39973.sol#52) should be declared external
MultiAsset.totalSupply (/../data/reentrancy/solidity_contract/39973.sol#53) should be declared external
MultiAsset.balanceOf (/../data/reentrancy/solidity_contract/39973.sol#54) should be declared external
MultiAsset.transfer (/../data/reentrancy/solidity_contract/39973.sol#55) should be declared external
MultiAsset.transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#56) should be declared external
MultiAsset.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#57) should be declared external
MultiAsset.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#58) should be declared external
MultiAsset.proxyTransferWithReference (/../data/reentrancy/solidity_contract/39973.sol#59) should be declared external
MultiAsset.proxyTransferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#60) should be declared external
MultiAsset.approve (/../data/reentrancy/solidity_contract/39973.sol#61) should be declared external
MultiAsset.proxyApprove (/../data/reentrancy/solidity_contract/39973.sol#62) should be declared external
MultiAsset.allowance (/../data/reentrancy/solidity_contract/39973.sol#63) should be declared external
MultiAsset.transferFrom (/../data/reentrancy/solidity_contract/39973.sol#64) should be declared external
MultiAsset.transferFromWithReference (/../data/reentrancy/solidity_contract/39973.sol#65) should be declared external
MultiAsset.transferFromToICAP (/../data/reentrancy/solidity_contract/39973.sol#66) should be declared external
MultiAsset.transferFromToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#67) should be declared external
MultiAsset.proxyTransferFromWithReference (/../data/reentrancy/solidity_contract/39973.sol#68) should be declared external
MultiAsset.proxyTransferFromToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#69) should be declared external
MultiAsset.setCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#70) should be declared external
MultiAsset.setCosignerAddressForUser (/../data/reentrancy/solidity_contract/39973.sol#71) should be declared external
MultiAsset.proxySetCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#72) should be declared external
AssetMin.init (/../data/reentrancy/solidity_contract/39973.sol#83-91) should be declared external
AssetMin.setName (/../data/reentrancy/solidity_contract/39973.sol#93-99) should be declared external
AssetMin.totalSupply (/../data/reentrancy/solidity_contract/39973.sol#107-109) should be declared external
AssetMin.allowance (/../data/reentrancy/solidity_contract/39973.sol#115-117) should be declared external
AssetMin.emitTransfer (/../data/reentrancy/solidity_contract/39973.sol#155-157) should be declared external
AssetMin.emitApprove (/../data/reentrancy/solidity_contract/39973.sol#159-161) should be declared external
AssetMin.sendToOwner (/../data/reentrancy/solidity_contract/39973.sol#163-166) should be declared external
AssetMin.decimals (/../data/reentrancy/solidity_contract/39973.sol#168-170) should be declared external
GMT.updateRefundGas (/../data/reentrancy/solidity_contract/39973.sol#200-213) should be declared external
GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215-224) should be declared external
GMT.setupTreasury (/../data/reentrancy/solidity_contract/39973.sol#226-236) should be declared external
GMT.setForward (/../data/reentrancy/solidity_contract/39973.sol#238-241) should be declared external
GMT.checkTransfer (/../data/reentrancy/solidity_contract/39973.sol#343-345) should be declared external
GMT.checkTransferToICAP (/../data/reentrancy/solidity_contract/39973.sol#347-349) should be declared external
GMT.checkTransferWithReference (/../data/reentrancy/solidity_contract/39973.sol#351-353) should be declared external
GMT.checkTransferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#355-357) should be declared external
GMT.checkApprove (/../data/reentrancy/solidity_contract/39973.sol#359-361) should be declared external
GMT.checkSetCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#363-365) should be declared external
GMT.checkForward (/../data/reentrancy/solidity_contract/39973.sol#367-369) should be declared external
GMT.fallback (/../data/reentrancy/solidity_contract/39973.sol#382-384) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/39973.sol:
	- pragma solidity^0.4.4 (/../data/reentrancy/solidity_contract/39973.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeMin._unsafeSend (/../data/reentrancy/solidity_contract/39973.sol#32-34):
	-_to.call.value(_value)() /../data/reentrancy/solidity_contract/39973.sol#33
Low level call in GMT._forward (/../data/reentrancy/solidity_contract/39973.sol#371-380):
	-! _to.call.value(msg.value)(_data) /../data/reentrancy/solidity_contract/39973.sol#376-378
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'SafeMin._safeFalse' (/../data/reentrancy/solidity_contract/39973.sol#21-24) is not in mixedCase
Function 'SafeMin._safeSend' (/../data/reentrancy/solidity_contract/39973.sol#26-30) is not in mixedCase
Parameter '_to' of SafeMin._safeSend (/../data/reentrancy/solidity_contract/39973.sol#26) is not in mixedCase
Parameter '_value' of SafeMin._safeSend (/../data/reentrancy/solidity_contract/39973.sol#26) is not in mixedCase
Function 'SafeMin._unsafeSend' (/../data/reentrancy/solidity_contract/39973.sol#32-34) is not in mixedCase
Parameter '_to' of SafeMin._unsafeSend (/../data/reentrancy/solidity_contract/39973.sol#32) is not in mixedCase
Parameter '_value' of SafeMin._unsafeSend (/../data/reentrancy/solidity_contract/39973.sol#32) is not in mixedCase
Function 'SafeMin._isContract' (/../data/reentrancy/solidity_contract/39973.sol#36-38) is not in mixedCase
Function 'SafeMin._isHuman' (/../data/reentrancy/solidity_contract/39973.sol#40-42) is not in mixedCase
Parameter '_multiAsset' of AssetMin.init (/../data/reentrancy/solidity_contract/39973.sol#83) is not in mixedCase
Parameter '_symbol' of AssetMin.init (/../data/reentrancy/solidity_contract/39973.sol#83) is not in mixedCase
Parameter '_name' of AssetMin.setName (/../data/reentrancy/solidity_contract/39973.sol#93) is not in mixedCase
Parameter '_owner' of AssetMin.balanceOf (/../data/reentrancy/solidity_contract/39973.sol#111) is not in mixedCase
Parameter '_from' of AssetMin.allowance (/../data/reentrancy/solidity_contract/39973.sol#115) is not in mixedCase
Parameter '_spender' of AssetMin.allowance (/../data/reentrancy/solidity_contract/39973.sol#115) is not in mixedCase
Parameter '_to' of AssetMin.transfer (/../data/reentrancy/solidity_contract/39973.sol#119) is not in mixedCase
Parameter '_value' of AssetMin.transfer (/../data/reentrancy/solidity_contract/39973.sol#119) is not in mixedCase
Parameter '_to' of AssetMin.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#123) is not in mixedCase
Parameter '_value' of AssetMin.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#123) is not in mixedCase
Parameter '_reference' of AssetMin.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#123) is not in mixedCase
Function 'AssetMin.__transferWithReference' (/../data/reentrancy/solidity_contract/39973.sol#127-131) is not in mixedCase
Parameter '_to' of AssetMin.__transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#127) is not in mixedCase
Parameter '_value' of AssetMin.__transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#127) is not in mixedCase
Parameter '_reference' of AssetMin.__transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#127) is not in mixedCase
Parameter '_icap' of AssetMin.transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#133) is not in mixedCase
Parameter '_value' of AssetMin.transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#133) is not in mixedCase
Parameter '_icap' of AssetMin.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#137) is not in mixedCase
Parameter '_value' of AssetMin.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#137) is not in mixedCase
Parameter '_reference' of AssetMin.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#137) is not in mixedCase
Function 'AssetMin.__transferToICAPWithReference' (/../data/reentrancy/solidity_contract/39973.sol#141-145) is not in mixedCase
Parameter '_icap' of AssetMin.__transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#141) is not in mixedCase
Parameter '_value' of AssetMin.__transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#141) is not in mixedCase
Parameter '_reference' of AssetMin.__transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#141) is not in mixedCase
Parameter '_spender' of AssetMin.approve (/../data/reentrancy/solidity_contract/39973.sol#147) is not in mixedCase
Parameter '_value' of AssetMin.approve (/../data/reentrancy/solidity_contract/39973.sol#147) is not in mixedCase
Parameter '_cosigner' of AssetMin.setCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#151) is not in mixedCase
Parameter '_from' of AssetMin.emitTransfer (/../data/reentrancy/solidity_contract/39973.sol#155) is not in mixedCase
Parameter '_to' of AssetMin.emitTransfer (/../data/reentrancy/solidity_contract/39973.sol#155) is not in mixedCase
Parameter '_value' of AssetMin.emitTransfer (/../data/reentrancy/solidity_contract/39973.sol#155) is not in mixedCase
Parameter '_from' of AssetMin.emitApprove (/../data/reentrancy/solidity_contract/39973.sol#159) is not in mixedCase
Parameter '_spender' of AssetMin.emitApprove (/../data/reentrancy/solidity_contract/39973.sol#159) is not in mixedCase
Parameter '_value' of AssetMin.emitApprove (/../data/reentrancy/solidity_contract/39973.sol#159) is not in mixedCase
Function 'Owned.Owned' (/../data/reentrancy/solidity_contract/39973.sol#176-178) is not in mixedCase
Parameter '_to' of GMT.transfer (/../data/reentrancy/solidity_contract/39973.sol#307) is not in mixedCase
Parameter '_value' of GMT.transfer (/../data/reentrancy/solidity_contract/39973.sol#307) is not in mixedCase
Parameter '_to' of GMT.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#319) is not in mixedCase
Parameter '_value' of GMT.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#319) is not in mixedCase
Parameter '_reference' of GMT.transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#319) is not in mixedCase
Parameter '_icap' of GMT.transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#313) is not in mixedCase
Parameter '_value' of GMT.transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#313) is not in mixedCase
Parameter '_icap' of GMT.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#325) is not in mixedCase
Parameter '_value' of GMT.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#325) is not in mixedCase
Parameter '_reference' of GMT.transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#325) is not in mixedCase
Parameter '_spender' of GMT.approve (/../data/reentrancy/solidity_contract/39973.sol#331) is not in mixedCase
Parameter '_value' of GMT.approve (/../data/reentrancy/solidity_contract/39973.sol#331) is not in mixedCase
Parameter '_cosigner' of GMT.setCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#337) is not in mixedCase
Parameter '_transfer' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_transferToICAP' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_transferWithReference' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_transferToICAPWithReference' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_approve' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_forward' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_setCosigner' of GMT.setOperationsCallGas (/../data/reentrancy/solidity_contract/39973.sol#215) is not in mixedCase
Parameter '_treasury' of GMT.setupTreasury (/../data/reentrancy/solidity_contract/39973.sol#226) is not in mixedCase
Parameter '_txGasPriceLimit' of GMT.setupTreasury (/../data/reentrancy/solidity_contract/39973.sol#226) is not in mixedCase
Parameter '_msgSig' of GMT.setForward (/../data/reentrancy/solidity_contract/39973.sol#238) is not in mixedCase
Parameter '_forward' of GMT.setForward (/../data/reentrancy/solidity_contract/39973.sol#238) is not in mixedCase
Function 'GMT._stringGas' (/../data/reentrancy/solidity_contract/39973.sol#243-245) is not in mixedCase
Parameter '_string' of GMT._stringGas (/../data/reentrancy/solidity_contract/39973.sol#243) is not in mixedCase
Function 'GMT._applyRefund' (/../data/reentrancy/solidity_contract/39973.sol#247-253) is not in mixedCase
Parameter '_startGas' of GMT._applyRefund (/../data/reentrancy/solidity_contract/39973.sol#247) is not in mixedCase
Function 'GMT._refund' (/../data/reentrancy/solidity_contract/39973.sol#255-257) is not in mixedCase
Parameter '_value' of GMT._refund (/../data/reentrancy/solidity_contract/39973.sol#255) is not in mixedCase
Function 'GMT._transfer' (/../data/reentrancy/solidity_contract/39973.sol#259-265) is not in mixedCase
Parameter '_to' of GMT._transfer (/../data/reentrancy/solidity_contract/39973.sol#259) is not in mixedCase
Parameter '_value' of GMT._transfer (/../data/reentrancy/solidity_contract/39973.sol#259) is not in mixedCase
Function 'GMT._transferToICAP' (/../data/reentrancy/solidity_contract/39973.sol#267-273) is not in mixedCase
Parameter '_icap' of GMT._transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#267) is not in mixedCase
Parameter '_value' of GMT._transferToICAP (/../data/reentrancy/solidity_contract/39973.sol#267) is not in mixedCase
Function 'GMT._transferWithReference' (/../data/reentrancy/solidity_contract/39973.sol#275-281) is not in mixedCase
Parameter '_to' of GMT._transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#275) is not in mixedCase
Parameter '_value' of GMT._transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#275) is not in mixedCase
Parameter '_reference' of GMT._transferWithReference (/../data/reentrancy/solidity_contract/39973.sol#275) is not in mixedCase
Function 'GMT._transferToICAPWithReference' (/../data/reentrancy/solidity_contract/39973.sol#283-289) is not in mixedCase
Parameter '_icap' of GMT._transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#283) is not in mixedCase
Parameter '_value' of GMT._transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#283) is not in mixedCase
Parameter '_reference' of GMT._transferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#283) is not in mixedCase
Function 'GMT._approve' (/../data/reentrancy/solidity_contract/39973.sol#291-297) is not in mixedCase
Parameter '_spender' of GMT._approve (/../data/reentrancy/solidity_contract/39973.sol#291) is not in mixedCase
Parameter '_value' of GMT._approve (/../data/reentrancy/solidity_contract/39973.sol#291) is not in mixedCase
Function 'GMT._setCosignerAddress' (/../data/reentrancy/solidity_contract/39973.sol#299-305) is not in mixedCase
Parameter '_cosigner' of GMT._setCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#299) is not in mixedCase
Parameter '_to' of GMT.checkTransfer (/../data/reentrancy/solidity_contract/39973.sol#343) is not in mixedCase
Parameter '_value' of GMT.checkTransfer (/../data/reentrancy/solidity_contract/39973.sol#343) is not in mixedCase
Parameter '_icap' of GMT.checkTransferToICAP (/../data/reentrancy/solidity_contract/39973.sol#347) is not in mixedCase
Parameter '_value' of GMT.checkTransferToICAP (/../data/reentrancy/solidity_contract/39973.sol#347) is not in mixedCase
Parameter '_to' of GMT.checkTransferWithReference (/../data/reentrancy/solidity_contract/39973.sol#351) is not in mixedCase
Parameter '_value' of GMT.checkTransferWithReference (/../data/reentrancy/solidity_contract/39973.sol#351) is not in mixedCase
Parameter '_reference' of GMT.checkTransferWithReference (/../data/reentrancy/solidity_contract/39973.sol#351) is not in mixedCase
Parameter '_icap' of GMT.checkTransferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#355) is not in mixedCase
Parameter '_value' of GMT.checkTransferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#355) is not in mixedCase
Parameter '_reference' of GMT.checkTransferToICAPWithReference (/../data/reentrancy/solidity_contract/39973.sol#355) is not in mixedCase
Parameter '_spender' of GMT.checkApprove (/../data/reentrancy/solidity_contract/39973.sol#359) is not in mixedCase
Parameter '_value' of GMT.checkApprove (/../data/reentrancy/solidity_contract/39973.sol#359) is not in mixedCase
Parameter '_cosigner' of GMT.checkSetCosignerAddress (/../data/reentrancy/solidity_contract/39973.sol#363) is not in mixedCase
Parameter '_data' of GMT.checkForward (/../data/reentrancy/solidity_contract/39973.sol#367) is not in mixedCase
Function 'GMT._forward' (/../data/reentrancy/solidity_contract/39973.sol#371-380) is not in mixedCase
Parameter '_to' of GMT._forward (/../data/reentrancy/solidity_contract/39973.sol#371) is not in mixedCase
Parameter '_data' of GMT._forward (/../data/reentrancy/solidity_contract/39973.sol#371) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39973.sol analyzed (6 contracts), 186 result(s) found
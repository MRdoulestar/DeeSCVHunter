INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/39994.sol:
/../data/reentrancy/solidity_contract/39994.sol:25:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/../data/reentrancy/solidity_contract/39994.sol:36:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (mutex) throw;
                   ^---^
/../data/reentrancy/solidity_contract/39994.sol:47:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (mutex) throw;
                   ^---^
/../data/reentrancy/solidity_contract/39994.sol:53:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (mutex) throw;
                   ^---^
/../data/reentrancy/solidity_contract/39994.sol:59:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Base() { owner = msg.sender; }
    ^-------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:79:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!_recipient.call.value(_ether)()) throw;
                                             ^---^
/../data/reentrancy/solidity_contract/39994.sol:117:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!assertion) throw;
                      ^---^
/../data/reentrancy/solidity_contract/39994.sol:252:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_amount > balance[msg.sender]) throw;
                                           ^---^
/../data/reentrancy/solidity_contract/39994.sol:258:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           _amount > balance[_from]) throw;
                                     ^---^
/../data/reentrancy/solidity_contract/39994.sol:264:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ERC20Token(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:324:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balance[msg.sender] == 0) throw;
                                      ^---^
/../data/reentrancy/solidity_contract/39994.sol:669:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!trading) throw;
                      ^---^
/../data/reentrancy/solidity_contract/39994.sol:677:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            _bidPrice <= MINPRICE || _bidPrice >= MAXNUM) throw;  
                                                          ^---^
/../data/reentrancy/solidity_contract/39994.sol:684:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            _askPrice < MINPRICE || _askPrice > MAXNUM) throw;
                                                        ^---^
/../data/reentrancy/solidity_contract/39994.sol:690:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherBalance[_member] < _ether) throw;
                                            ^---^
/../data/reentrancy/solidity_contract/39994.sol:696:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balance[_member] < _amount) throw;
                                        ^---^
/../data/reentrancy/solidity_contract/39994.sol:702:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ITT(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:115:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool assertion) internal constant
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:66:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/../data/reentrancy/solidity_contract/39994.sol:74:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangedOwner(msg.sender, owner);
        ^-----------------------------^
/../data/reentrancy/solidity_contract/39994.sol:298:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:312:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:326:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:740:24: Warning: "sha3" has been deprecated in favour of "keccak256"
        return amounts[sha3(_price, _trader)];
                       ^-------------------^
/../data/reentrancy/solidity_contract/39994.sol:740:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return amounts[sha3(_price, _trader)];
                       ^-------------------^
/../data/reentrancy/solidity_contract/39994.sol:752:27: Warning: "sha3" has been deprecated in favour of "keccak256"
            v_ += amounts[sha3(_price, address(n))];
                          ^----------------------^
/../data/reentrancy/solidity_contract/39994.sol:752:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            v_ += amounts[sha3(_price, address(n))];
                          ^----------------------^
/../data/reentrancy/solidity_contract/39994.sol:776:25: Warning: "sha3" has been deprecated in favour of "keccak256"
            if (amounts[sha3(p, _addr)] > 0) c++;
                        ^------------^
/../data/reentrancy/solidity_contract/39994.sol:776:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (amounts[sha3(p, _addr)] > 0) c++;
                        ^------------^
/../data/reentrancy/solidity_contract/39994.sol:790:25: Warning: "sha3" has been deprecated in favour of "keccak256"
            if (amounts[sha3(p, _addr)] > 0) {
                        ^------------^
/../data/reentrancy/solidity_contract/39994.sol:790:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (amounts[sha3(p, _addr)] > 0) {
                        ^------------^
/../data/reentrancy/solidity_contract/39994.sol:792:37: Warning: "sha3" has been deprecated in favour of "keccak256"
                open[i++] = amounts[sha3(p, _addr)];
                                    ^------------^
/../data/reentrancy/solidity_contract/39994.sol:792:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                open[i++] = amounts[sha3(p, _addr)];
                                    ^------------^
/../data/reentrancy/solidity_contract/39994.sol:864:9: Warning: Invoking events without "emit" prefix is deprecated.
        Trading(true);
        ^-----------^
/../data/reentrancy/solidity_contract/39994.sol:909:25: Warning: "sha3" has been deprecated in favour of "keccak256"
            orderHash = sha3(bestPrice, maker);
                        ^--------------------^
/../data/reentrancy/solidity_contract/39994.sol:909:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            orderHash = sha3(bestPrice, maker);
                        ^--------------------^
/../data/reentrancy/solidity_contract/39994.sol:945:13: Warning: Invoking events without "emit" prefix is deprecated.
            Sale (bestPrice, takeAmount, msg.sender, maker);
            ^---------------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:954:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        orderHash = sha3(tmsg.price, msg.sender);
                    ^--------------------------^
/../data/reentrancy/solidity_contract/39994.sol:954:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        orderHash = sha3(tmsg.price, msg.sender);
                    ^--------------------------^
/../data/reentrancy/solidity_contract/39994.sol:971:13: Warning: Invoking events without "emit" prefix is deprecated.
            Ask (tmsg.price, tmsg.tradeAmount, msg.sender);
            ^--------------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:974:13: Warning: Invoking events without "emit" prefix is deprecated.
            Bid (tmsg.price, tmsg.tradeAmount, msg.sender);
            ^--------------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:979:31: Warning: "sha3" has been deprecated in favour of "keccak256"
        uint amount = amounts[sha3(tmsg.price, msg.sender)];
                              ^--------------------------^
/../data/reentrancy/solidity_contract/39994.sol:979:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint amount = amounts[sha3(tmsg.price, msg.sender)];
                              ^--------------------------^
/../data/reentrancy/solidity_contract/39994.sol:991:24: Warning: "sha3" has been deprecated in favour of "keccak256"
        delete amounts[sha3(_price, _trader)];
                       ^-------------------^
/../data/reentrancy/solidity_contract/39994.sol:991:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        delete amounts[sha3(_price, _trader)];
                       ^-------------------^
/../data/reentrancy/solidity_contract/39994.sol:59:5: Warning: No visibility specified. Defaulting to "public". 
    function Base() { owner = msg.sender; }
    ^-------------------------------------^
/../data/reentrancy/solidity_contract/39994.sol:264:5: Warning: No visibility specified. Defaulting to "public". 
    function ERC20Token(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:452:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function exists(CLL storage self, int n) internal constant returns (bool) {
                                      ^---^
/../data/reentrancy/solidity_contract/39994.sol:631:5: Warning: No visibility specified. Defaulting to "public". 
    function buy (uint _bidPrice, uint _amount, bool _make)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:702:5: Warning: No visibility specified. Defaulting to "public". 
    function ITT(
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:743:5: Warning: No visibility specified. Defaulting to "public". 
    function sizeOf(uint l) constant returns (uint s) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:785:9: Warning: Unused local variable.
        uint c;
        ^----^
/../data/reentrancy/solidity_contract/39994.sol:814:5: Warning: No visibility specified. Defaulting to "public". 
    function buy (uint _bidPrice, uint _amount, bool _make)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:905:13: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
            msg.gas > MINGAS
            ^-----^
/../data/reentrancy/solidity_contract/39994.sol:953:52: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        if (tmsg.tradeAmount == 0 || !tmsg.make || msg.gas < MINGAS) return;
                                                   ^-----^
/../data/reentrancy/solidity_contract/39994.sol:61:5: Warning: Function state mutability can be restricted to pure
    function version() public constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:115:5: Warning: Function state mutability can be restricted to pure
    function assert(bool assertion) internal constant
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:123:5: Warning: Function state mutability can be restricted to pure
    function cmp (uint a, uint b, bool _sym) internal constant returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:131:5: Warning: Function state mutability can be restricted to pure
    function cmpEq (uint a, uint b, bool _sym) internal constant returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:353:5: Warning: Function state mutability can be restricted to pure
    function version() internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/39994.sol:447:5: Warning: Function state mutability can be restricted to pure
    function version() internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Base.safeSend (/../data/reentrancy/solidity_contract/39994.sol#78-81) sends eth to arbitrary user
	Dangerous calls:
	- ! _recipient.call.value(_ether)() (/../data/reentrancy/solidity_contract/39994.sol#79)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
ITTInterface.orderFIFOs (/../data/reentrancy/solidity_contract/39994.sol#580) is never initialized. It is used in:
	- getPriceVolume (/../data/reentrancy/solidity_contract/39994.sol#748-756)
	- sizeOf (/../data/reentrancy/solidity_contract/39994.sol#743-746)
	- getNode (/../data/reentrancy/solidity_contract/39994.sol#799-803)
	- take (/../data/reentrancy/solidity_contract/39994.sol#890-947)
	- make (/../data/reentrancy/solidity_contract/39994.sol#949-976)
	- closeOrder (/../data/reentrancy/solidity_contract/39994.sol#986-992)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
tmsg in ITT.trade (/../data/reentrancy/solidity_contract/39994.sol#873) is a local variable never initialiazed
tmsg in ITT.cancel (/../data/reentrancy/solidity_contract/39994.sol#847) is a local variable never initialiazed
i in ITT.getOpenOrdersOf (/../data/reentrancy/solidity_contract/39994.sol#784) is a local variable never initialiazed
c in ITT.numOrdersOf (/../data/reentrancy/solidity_contract/39994.sol#773) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
ITT.closeOrder (/../data/reentrancy/solidity_contract/39994.sol#986-992) does not use the value returned by external calls:
	-orderFIFOs[_price].remove(uint256(_trader)) (/../data/reentrancy/solidity_contract/39994.sol#987)
	-priceBook.remove(_price) (/../data/reentrancy/solidity_contract/39994.sol#989)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Math.assert (function @ /../data/reentrancy/solidity_contract/39994.sol#115-118) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#25:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#36:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#47:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#324:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#252:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#258:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#740:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#752:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#776:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#790-793:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#792:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#902-946:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#909:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#953:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#954:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#979:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#991:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#669:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#677:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#684:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#690:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/39994.sol#696:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Base.version (/../data/reentrancy/solidity_contract/39994.sol#61-63) should be declared external
ERC20Token.version (/../data/reentrancy/solidity_contract/39994.sol#277-279) should be declared external
ITT.version (/../data/reentrancy/solidity_contract/39994.sol#726-728) should be declared external
Base.contractBalance (/../data/reentrancy/solidity_contract/39994.sol#65-67) should be declared external
Base.changeOwner (/../data/reentrancy/solidity_contract/39994.sol#70-76) should be declared external
Math.version (/../data/reentrancy/solidity_contract/39994.sol#110-113) should be declared external
ERC20Token.balanceOf (/../data/reentrancy/solidity_contract/39994.sol#281-287) should be declared external
ITT.getAmount (/../data/reentrancy/solidity_contract/39994.sol#738-741) should be declared external
ITTInterface.getAmount (/../data/reentrancy/solidity_contract/39994.sol#613-614) should be declared external
ITT.getBook (/../data/reentrancy/solidity_contract/39994.sol#758-769) should be declared external
ITTInterface.getBook (/../data/reentrancy/solidity_contract/39994.sol#623) should be declared external
ITTInterface.buy (/../data/reentrancy/solidity_contract/39994.sol#631-632) should be declared external
ITT.buy (/../data/reentrancy/solidity_contract/39994.sol#814-823) should be declared external
ITT.etherBalanceOf (/../data/reentrancy/solidity_contract/39994.sol#730-732) should be declared external
ITT.sizeOf (/../data/reentrancy/solidity_contract/39994.sol#743-746) should be declared external
ITT.getOpenOrdersOf (/../data/reentrancy/solidity_contract/39994.sol#782-797) should be declared external
ITT.getNode (/../data/reentrancy/solidity_contract/39994.sol#799-803) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/39994.sol:
	- pragma solidity^0.4.0 (/../data/reentrancy/solidity_contract/39994.sol#3): it allows old versions
	- pragma solidity^0.4.0 (/../data/reentrancy/solidity_contract/39994.sol#88): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Base.safeSend (/../data/reentrancy/solidity_contract/39994.sol#78-81):
	-! _recipient.call.value(_ether)() /../data/reentrancy/solidity_contract/39994.sol#79
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Base.Base' (/../data/reentrancy/solidity_contract/39994.sol#59) is not in mixedCase
Parameter '_newOwner' of Base.changeOwner (/../data/reentrancy/solidity_contract/39994.sol#70) is not in mixedCase
Parameter '_recipient' of Base.safeSend (/../data/reentrancy/solidity_contract/39994.sol#78) is not in mixedCase
Parameter '_ether' of Base.safeSend (/../data/reentrancy/solidity_contract/39994.sol#78) is not in mixedCase
Parameter '_sym' of Math.cmp (/../data/reentrancy/solidity_contract/39994.sol#123) is not in mixedCase
Parameter '_sym' of Math.cmpEq (/../data/reentrancy/solidity_contract/39994.sol#131) is not in mixedCase
Constant 'Math.iTRUE' (/../data/reentrancy/solidity_contract/39994.sol#100) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Math.iFALSE' (/../data/reentrancy/solidity_contract/39994.sol#101) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Math.iPOS' (/../data/reentrancy/solidity_contract/39994.sol#102) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Math.iZERO' (/../data/reentrancy/solidity_contract/39994.sol#103) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Math.iNEG' (/../data/reentrancy/solidity_contract/39994.sol#104) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'ERC20Token.ERC20Token' (/../data/reentrancy/solidity_contract/39994.sol#264-275) is not in mixedCase
Parameter '_supply' of ERC20Token.ERC20Token (/../data/reentrancy/solidity_contract/39994.sol#265) is not in mixedCase
Parameter '_decimalPlaces' of ERC20Token.ERC20Token (/../data/reentrancy/solidity_contract/39994.sol#266) is not in mixedCase
Parameter '_symbol' of ERC20Token.ERC20Token (/../data/reentrancy/solidity_contract/39994.sol#267) is not in mixedCase
Parameter '_name' of ERC20Token.ERC20Token (/../data/reentrancy/solidity_contract/39994.sol#268) is not in mixedCase
Parameter '_addr' of ERC20Token.balanceOf (/../data/reentrancy/solidity_contract/39994.sol#281) is not in mixedCase
Parameter '_to' of ERC20Token.transfer (/../data/reentrancy/solidity_contract/39994.sol#290) is not in mixedCase
Parameter '_value' of ERC20Token.transfer (/../data/reentrancy/solidity_contract/39994.sol#290) is not in mixedCase
Parameter '_from' of ERC20Token.transferFrom (/../data/reentrancy/solidity_contract/39994.sol#303) is not in mixedCase
Parameter '_to' of ERC20Token.transferFrom (/../data/reentrancy/solidity_contract/39994.sol#303) is not in mixedCase
Parameter '_value' of ERC20Token.transferFrom (/../data/reentrancy/solidity_contract/39994.sol#303) is not in mixedCase
Parameter '_spender' of ERC20Token.approve (/../data/reentrancy/solidity_contract/39994.sol#319) is not in mixedCase
Parameter '_value' of ERC20Token.approve (/../data/reentrancy/solidity_contract/39994.sol#319) is not in mixedCase
Parameter '_side' of ITT.spread (/../data/reentrancy/solidity_contract/39994.sol#734) is not in mixedCase
Parameter '_price' of ITT.getAmount (/../data/reentrancy/solidity_contract/39994.sol#738) is not in mixedCase
Parameter '_trader' of ITT.getAmount (/../data/reentrancy/solidity_contract/39994.sol#738) is not in mixedCase
Parameter '_price' of ITT.getPriceVolume (/../data/reentrancy/solidity_contract/39994.sol#748) is not in mixedCase
Parameter '_bidPrice' of ITT.buy (/../data/reentrancy/solidity_contract/39994.sol#814) is not in mixedCase
Parameter '_amount' of ITT.buy (/../data/reentrancy/solidity_contract/39994.sol#814) is not in mixedCase
Parameter '_make' of ITT.buy (/../data/reentrancy/solidity_contract/39994.sol#814) is not in mixedCase
Parameter '_askPrice' of ITT.sell (/../data/reentrancy/solidity_contract/39994.sol#825) is not in mixedCase
Parameter '_amount' of ITT.sell (/../data/reentrancy/solidity_contract/39994.sol#825) is not in mixedCase
Parameter '_make' of ITT.sell (/../data/reentrancy/solidity_contract/39994.sol#825) is not in mixedCase
Parameter '_ether' of ITT.withdraw (/../data/reentrancy/solidity_contract/39994.sol#836) is not in mixedCase
Parameter '_price' of ITT.cancel (/../data/reentrancy/solidity_contract/39994.sol#842) is not in mixedCase
Parameter '_trading' of ITT.setTrading (/../data/reentrancy/solidity_contract/39994.sol#857) is not in mixedCase
Function 'ITT.ITT' (/../data/reentrancy/solidity_contract/39994.sol#702-722) is not in mixedCase
Parameter '_addr' of ITT.etherBalanceOf (/../data/reentrancy/solidity_contract/39994.sol#730) is not in mixedCase
Parameter '_addr' of ITT.numOrdersOf (/../data/reentrancy/solidity_contract/39994.sol#771) is not in mixedCase
Parameter '_addr' of ITT.getOpenOrdersOf (/../data/reentrancy/solidity_contract/39994.sol#782) is not in mixedCase
Parameter '_list' of ITT.getNode (/../data/reentrancy/solidity_contract/39994.sol#799) is not in mixedCase
Parameter '_node' of ITT.getNode (/../data/reentrancy/solidity_contract/39994.sol#799) is not in mixedCase
Parameter '_price' of ITT.trade (/../data/reentrancy/solidity_contract/39994.sol#872) is not in mixedCase
Parameter '_amount' of ITT.trade (/../data/reentrancy/solidity_contract/39994.sol#872) is not in mixedCase
Parameter '_side' of ITT.trade (/../data/reentrancy/solidity_contract/39994.sol#872) is not in mixedCase
Parameter '_make' of ITT.trade (/../data/reentrancy/solidity_contract/39994.sol#872) is not in mixedCase
Parameter '_price' of ITT.closeOrder (/../data/reentrancy/solidity_contract/39994.sol#986) is not in mixedCase
Parameter '_trader' of ITT.closeOrder (/../data/reentrancy/solidity_contract/39994.sol#986) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Math.NULL (/../data/reentrancy/solidity_contract/39994.sol#96) is never used in ITT
Math.LT (/../data/reentrancy/solidity_contract/39994.sol#97) is never used in ITT
Math.GT (/../data/reentrancy/solidity_contract/39994.sol#98) is never used in ITT
Math.iTRUE (/../data/reentrancy/solidity_contract/39994.sol#100) is never used in ITT
Math.iFALSE (/../data/reentrancy/solidity_contract/39994.sol#101) is never used in ITT
Math.iPOS (/../data/reentrancy/solidity_contract/39994.sol#102) is never used in ITT
Math.iZERO (/../data/reentrancy/solidity_contract/39994.sol#103) is never used in ITT
Math.iNEG (/../data/reentrancy/solidity_contract/39994.sol#104) is never used in ITT
ITTInterface.NEG (/../data/reentrancy/solidity_contract/39994.sol#547) is never used in ITT
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/../data/reentrancy/solidity_contract/39994.sol analyzed (8 contracts), 102 result(s) found
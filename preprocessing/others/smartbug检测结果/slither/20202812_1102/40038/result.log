INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/40038.sol:
/../data/reentrancy/solidity_contract/40038.sol:19:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenSwapLock) throw;
                           ^---^
/../data/reentrancy/solidity_contract/40038.sol:40:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (lock) throw;
                      ^---^
/../data/reentrancy/solidity_contract/40038.sol:57:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Lockable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:89:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != walletAddress) throw;
                                       ^---^
/../data/reentrancy/solidity_contract/40038.sol:93:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Token( uint initial_balance, address wallet) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:120:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/../data/reentrancy/solidity_contract/40038.sol:123:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/../data/reentrancy/solidity_contract/40038.sol:135:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/../data/reentrancy/solidity_contract/40038.sol:139:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/../data/reentrancy/solidity_contract/40038.sol:142:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/../data/reentrancy/solidity_contract/40038.sol:182:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_balances[newTokenHolder],tokensAmount )) throw;
                                                                ^---^
/../data/reentrancy/solidity_contract/40038.sol:183:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_supply,tokensAmount)) throw;
                                             ^---^
/../data/reentrancy/solidity_contract/40038.sol:246:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function multiowned(address[] _owners, uint _required) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:264:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/../data/reentrancy/solidity_contract/40038.sol:328:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/../data/reentrancy/solidity_contract/40038.sol:347:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/../data/reentrancy/solidity_contract/40038.sol:434:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function daylimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:506:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/../data/reentrancy/solidity_contract/40038.sol:511:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (amountRaised + msg.value > MAX_ETH) throw;
	                                        ^---^
/../data/reentrancy/solidity_contract/40038.sol:516:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!tokenSwap) throw;
                        ^---^
/../data/reentrancy/solidity_contract/40038.sol:549:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newTokenContractAddr == address(0x0)) throw;
                                                  ^---^
/../data/reentrancy/solidity_contract/40038.sol:551:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCtr != address(0x0)) throw;
                                      ^---^
/../data/reentrancy/solidity_contract/40038.sol:564:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(amountRaised, msg.value)) throw;
                                                 ^---^
/../data/reentrancy/solidity_contract/40038.sol:587:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Wallet(address[] _owners, uint _required, uint _daylimit)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:597:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCtr.tokenSwapLock()) throw;
                                      ^---^
/../data/reentrancy/solidity_contract/40038.sol:616:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == address(tokenCtr)) throw;
                                      ^---^
/../data/reentrancy/solidity_contract/40038.sol:43:13: Warning: Invoking events without "emit" prefix is deprecated.
            Locked();
            ^------^
/../data/reentrancy/solidity_contract/40038.sol:51:17: Warning: Invoking events without "emit" prefix is deprecated.
                Unlocked();
                ^--------^
/../data/reentrancy/solidity_contract/40038.sol:128:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer( msg.sender, to, value );
    ^-------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:148:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer( from, to, value );
    ^-------------------------^
/../data/reentrancy/solidity_contract/40038.sol:154:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval( msg.sender, spender, value );
    ^------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:188:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenMint(newTokenHolder, tokensAmount);
        ^-------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:195:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenSwapOver();
        ^-------------^
/../data/reentrancy/solidity_contract/40038.sol:268:13: Warning: Invoking events without "emit" prefix is deprecated.
            Revoke(msg.sender, _operation);
            ^----------------------------^
/../data/reentrancy/solidity_contract/40038.sol:273:69: Warning: "sha3" has been deprecated in favour of "keccak256"
    function changeOwner(address _from, address _to) onlymanyowners(sha3(msg.data)) external {
                                                                    ^------------^
/../data/reentrancy/solidity_contract/40038.sol:282:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerChanged(_from, _to);
        ^----------------------^
/../data/reentrancy/solidity_contract/40038.sol:285:54: Warning: "sha3" has been deprecated in favour of "keccak256"
    function addOwner(address _owner) onlymanyowners(sha3(msg.data)) external {
                                                     ^------------^
/../data/reentrancy/solidity_contract/40038.sol:296:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerAdded(_owner);
        ^----------------^
/../data/reentrancy/solidity_contract/40038.sol:299:57: Warning: "sha3" has been deprecated in favour of "keccak256"
    function removeOwner(address _owner) onlymanyowners(sha3(msg.data)) external {
                                                        ^------------^
/../data/reentrancy/solidity_contract/40038.sol:308:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerRemoved(_owner);
        ^------------------^
/../data/reentrancy/solidity_contract/40038.sol:311:66: Warning: "sha3" has been deprecated in favour of "keccak256"
    function changeRequirement(uint _newRequired) onlymanyowners(sha3(msg.data)) external {
                                                                 ^------------^
/../data/reentrancy/solidity_contract/40038.sol:315:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequirementChanged(_newRequired);
        ^------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:361:13: Warning: Invoking events without "emit" prefix is deprecated.
            Confirmation(msg.sender, _operation);
            ^----------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:439:59: Warning: "sha3" has been deprecated in favour of "keccak256"
    function setDailyLimit(uint _newLimit) onlymanyowners(sha3(msg.data)) external {
                                                          ^------------^
/../data/reentrancy/solidity_contract/40038.sol:443:47: Warning: "sha3" has been deprecated in favour of "keccak256"
    function resetSpentToday() onlymanyowners(sha3(msg.data)) external {
                                              ^------------^
/../data/reentrancy/solidity_contract/40038.sol:562:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(msg.sender, msg.value);
        ^----------------------------^
/../data/reentrancy/solidity_contract/40038.sol:592:47: Warning: "sha3" has been deprecated in favour of "keccak256"
    function kill(address _to) onlymanyowners(sha3(msg.data)) external {
                                              ^------------^
/../data/reentrancy/solidity_contract/40038.sol:599:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(_to);
        ^----------^
/../data/reentrancy/solidity_contract/40038.sol:620:13: Warning: Invoking events without "emit" prefix is deprecated.
            SingleTransact(msg.sender, _value, _to, _data);
            ^--------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:626:14: Warning: "sha3" has been deprecated in favour of "keccak256"
        _r = sha3(msg.data, block.number);
             ^--------------------------^
/../data/reentrancy/solidity_contract/40038.sol:626:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        _r = sha3(msg.data, block.number);
             ^--------------------------^
/../data/reentrancy/solidity_contract/40038.sol:631:13: Warning: Invoking events without "emit" prefix is deprecated.
            ConfirmationNeeded(_r, msg.sender, _value, _to, _data);
            ^----------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:640:13: Warning: Invoking events without "emit" prefix is deprecated.
            MultiTransact(msg.sender, _h, m_txs[_h].value, m_txs[_h].to, m_txs[_h].data);
            ^--------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function Lockable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint);
    ^---------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint);
    ^------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint);
    ^-------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns (bool ok);
    ^----------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value) returns (bool ok);
    ^----------------------------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value) returns (bool ok);
    ^--------------------------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:93:3: Warning: No visibility specified. Defaulting to "public". 
  function Token( uint initial_balance, address wallet) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:99:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint supply) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:103:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf( address who ) constant returns (uint value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:107:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint _allowance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:116:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer( address to, uint value) isTokenSwapOn isNewEpoch  checkLock
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom( address from, address to, uint value) isTokenSwapOn isNewEpoch checkLock returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) isTokenSwapOn isNewEpoch checkLock returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:160:3: Warning: No visibility specified. Defaulting to "public". 
  function currentSwapRate() constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function multiowned(address[] _owners, uint _required) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:323:5: Warning: No visibility specified. Defaulting to "public". 
    function isOwner(address _addr) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:327:5: Warning: No visibility specified. Defaulting to "public". 
    function hasConfirmed(bytes32 _operation, address _owner) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:434:5: Warning: No visibility specified. Defaulting to "public". 
    function daylimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function confirm(bytes32 _h) returns (bool);
    ^------------------------------------------^
/../data/reentrancy/solidity_contract/40038.sol:540:5: Warning: No visibility specified. Defaulting to "public". 
    function startTokenSwap() onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:544:5: Warning: No visibility specified. Defaulting to "public". 
    function stopTokenSwap() onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:548:5: Warning: No visibility specified. Defaulting to "public". 
    function setTokenContract(address newTokenContractAddr) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:556:5: Warning: No visibility specified. Defaulting to "public". 
    function buyTokens(address _beneficiary)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:587:5: Warning: No visibility specified. Defaulting to "public". 
    function Wallet(address[] _owners, uint _required, uint _daylimit)
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:603:5: Warning: No visibility specified. Defaulting to "public". 
    function()
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:637:5: Warning: No visibility specified. Defaulting to "public". 
    function confirm(bytes32 _h) onlymanyowners(_h) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:112:3: Warning: Function state mutability can be restricted to pure
  function safeToAdd(uint a, uint b) internal returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:323:5: Warning: Function state mutability can be restricted to view
    function isOwner(address _addr) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40038.sol:536:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in Wallet.confirm (/../data/reentrancy/solidity_contract/40038.sol#637-644):
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) (/../data/reentrancy/solidity_contract/40038.sol#639-640)
	State variables written after the call(s):
	- m_txs (/../data/reentrancy/solidity_contract/40038.sol#641)
Reentrancy in Wallet.execute (/../data/reentrancy/solidity_contract/40038.sol#612-633):
	External calls:
	- ! _to.call.value(_value)(_data) (/../data/reentrancy/solidity_contract/40038.sol#622-623)
	- ! confirm(_r) && m_txs[_r].to == 0 (/../data/reentrancy/solidity_contract/40038.sol#627-632)
	State variables written after the call(s):
	- m_txs (/../data/reentrancy/solidity_contract/40038.sol#628)
	- m_txs (/../data/reentrancy/solidity_contract/40038.sol#629)
	- m_txs (/../data/reentrancy/solidity_contract/40038.sol#630)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[92m
Reentrancy in tokenswap.areConditionsSatisfied (/../data/reentrancy/solidity_contract/40038.sol#520-534):
	External calls:
	- tokenCtr.creationTime() + SWAP_LENGTH < now (/../data/reentrancy/solidity_contract/40038.sol#522-533)
	- tokenCtr.disableTokenSwapLock() (/../data/reentrancy/solidity_contract/40038.sol#523)
	State variables written after the call(s):
	- tokenSwap (/../data/reentrancy/solidity_contract/40038.sol#524)
Reentrancy in tokenswap.areConditionsSatisfied (/../data/reentrancy/solidity_contract/40038.sol#520-534):
	External calls:
	- tokenCtr.disableTokenSwapLock() (/../data/reentrancy/solidity_contract/40038.sol#530)
	State variables written after the call(s):
	- tokenSwap (/../data/reentrancy/solidity_contract/40038.sol#531)
Reentrancy in tokenswap.buyTokens (/../data/reentrancy/solidity_contract/40038.sol#556-566):
	External calls:
	- tokenCtr.mintTokens(_beneficiary,msg.value) (/../data/reentrancy/solidity_contract/40038.sol#563)
	State variables written after the call(s):
	- amountRaised (/../data/reentrancy/solidity_contract/40038.sol#565)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#19:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#40:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#182:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#549:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#551:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#564:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#506:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#511:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#616:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#626:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#597:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /../data/reentrancy/solidity_contract/40038.sol#599:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.totalSupply (/../data/reentrancy/solidity_contract/40038.sol#99-101) should be declared external
ERC20.totalSupply (/../data/reentrancy/solidity_contract/40038.sol#66) should be declared external
ERC20.balanceOf (/../data/reentrancy/solidity_contract/40038.sol#67) should be declared external
Token.balanceOf (/../data/reentrancy/solidity_contract/40038.sol#103-105) should be declared external
Token.allowance (/../data/reentrancy/solidity_contract/40038.sol#107-109) should be declared external
ERC20.allowance (/../data/reentrancy/solidity_contract/40038.sol#68) should be declared external
Token.transfer (/../data/reentrancy/solidity_contract/40038.sol#116-130) should be declared external
ERC20.transfer (/../data/reentrancy/solidity_contract/40038.sol#70) should be declared external
ERC20.transferFrom (/../data/reentrancy/solidity_contract/40038.sol#71) should be declared external
Token.transferFrom (/../data/reentrancy/solidity_contract/40038.sol#132-150) should be declared external
ERC20.approve (/../data/reentrancy/solidity_contract/40038.sol#72) should be declared external
Token.approve (/../data/reentrancy/solidity_contract/40038.sol#152-156) should be declared external
multiowned.hasConfirmed (/../data/reentrancy/solidity_contract/40038.sol#327-337) should be declared external
tokenswap.startTokenSwap (/../data/reentrancy/solidity_contract/40038.sol#540-542) should be declared external
tokenswap.stopTokenSwap (/../data/reentrancy/solidity_contract/40038.sol#544-546) should be declared external
tokenswap.setTokenContract (/../data/reentrancy/solidity_contract/40038.sol#548-554) should be declared external
Wallet.fallback (/../data/reentrancy/solidity_contract/40038.sol#603-606) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /../data/reentrancy/solidity_contract/40038.sol:
	- pragma solidity^0.4.0 (/../data/reentrancy/solidity_contract/40038.sol#1): it allows old versions
	- pragma solidity^0.4.0 (/../data/reentrancy/solidity_contract/40038.sol#199): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Wallet.execute (/../data/reentrancy/solidity_contract/40038.sol#612-633):
	-! _to.call.value(_value)(_data) /../data/reentrancy/solidity_contract/40038.sol#622-623
Low level call in Wallet.confirm (/../data/reentrancy/solidity_contract/40038.sol#637-644):
	-! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) /../data/reentrancy/solidity_contract/40038.sol#639-640
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Lockable.Lockable' (/../data/reentrancy/solidity_contract/40038.sol#57-61) is not in mixedCase
Function 'Token.Token' (/../data/reentrancy/solidity_contract/40038.sol#93-97) is not in mixedCase
Parameter 'initial_balance' of Token.Token (/../data/reentrancy/solidity_contract/40038.sol#93) is not in mixedCase
Variable 'Token._balances' (/../data/reentrancy/solidity_contract/40038.sol#80) is not in mixedCase
Variable 'Token._approvals' (/../data/reentrancy/solidity_contract/40038.sol#81) is not in mixedCase
Variable 'Token._supply' (/../data/reentrancy/solidity_contract/40038.sol#82) is not in mixedCase
Contract 'multiowned' (/../data/reentrancy/solidity_contract/40038.sol#203-416) is not in CapWords
Parameter '_owners' of multiowned.multiowned (/../data/reentrancy/solidity_contract/40038.sol#246) is not in mixedCase
Parameter '_required' of multiowned.multiowned (/../data/reentrancy/solidity_contract/40038.sol#246) is not in mixedCase
Parameter '_operation' of multiowned.revoke (/../data/reentrancy/solidity_contract/40038.sol#259) is not in mixedCase
Parameter '_from' of multiowned.changeOwner (/../data/reentrancy/solidity_contract/40038.sol#273) is not in mixedCase
Parameter '_to' of multiowned.changeOwner (/../data/reentrancy/solidity_contract/40038.sol#273) is not in mixedCase
Parameter '_owner' of multiowned.addOwner (/../data/reentrancy/solidity_contract/40038.sol#285) is not in mixedCase
Parameter '_owner' of multiowned.removeOwner (/../data/reentrancy/solidity_contract/40038.sol#299) is not in mixedCase
Parameter '_newRequired' of multiowned.changeRequirement (/../data/reentrancy/solidity_contract/40038.sol#311) is not in mixedCase
Parameter '_addr' of multiowned.isOwner (/../data/reentrancy/solidity_contract/40038.sol#323) is not in mixedCase
Parameter '_operation' of multiowned.hasConfirmed (/../data/reentrancy/solidity_contract/40038.sol#327) is not in mixedCase
Parameter '_owner' of multiowned.hasConfirmed (/../data/reentrancy/solidity_contract/40038.sol#327) is not in mixedCase
Parameter '_operation' of multiowned.confirmAndCheck (/../data/reentrancy/solidity_contract/40038.sol#341) is not in mixedCase
Variable 'multiowned.m_required' (/../data/reentrancy/solidity_contract/40038.sol#404) is not in mixedCase
Variable 'multiowned.m_numOwners' (/../data/reentrancy/solidity_contract/40038.sol#406) is not in mixedCase
Variable 'multiowned.m_owners' (/../data/reentrancy/solidity_contract/40038.sol#409) is not in mixedCase
Constant 'multiowned.c_maxOwners' (/../data/reentrancy/solidity_contract/40038.sol#410) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'multiowned.m_ownerIndex' (/../data/reentrancy/solidity_contract/40038.sol#412) is not in mixedCase
Variable 'multiowned.m_pending' (/../data/reentrancy/solidity_contract/40038.sol#414) is not in mixedCase
Variable 'multiowned.m_pendingIndex' (/../data/reentrancy/solidity_contract/40038.sol#415) is not in mixedCase
Contract 'daylimit' (/../data/reentrancy/solidity_contract/40038.sol#421-473) is not in CapWords
Parameter '_limit' of daylimit.daylimit (/../data/reentrancy/solidity_contract/40038.sol#434) is not in mixedCase
Parameter '_newLimit' of daylimit.setDailyLimit (/../data/reentrancy/solidity_contract/40038.sol#439) is not in mixedCase
Parameter '_value' of daylimit.underLimit (/../data/reentrancy/solidity_contract/40038.sol#451) is not in mixedCase
Variable 'daylimit.m_dailyLimit' (/../data/reentrancy/solidity_contract/40038.sol#470) is not in mixedCase
Variable 'daylimit.m_spentToday' (/../data/reentrancy/solidity_contract/40038.sol#471) is not in mixedCase
Variable 'daylimit.m_lastDay' (/../data/reentrancy/solidity_contract/40038.sol#472) is not in mixedCase
Contract 'multisig' (/../data/reentrancy/solidity_contract/40038.sol#476-496) is not in CapWords
Contract 'tokenswap' (/../data/reentrancy/solidity_contract/40038.sol#498-567) is not in CapWords
Parameter '_beneficiary' of tokenswap.buyTokens (/../data/reentrancy/solidity_contract/40038.sol#556) is not in mixedCase
Parameter '_to' of Wallet.execute (/../data/reentrancy/solidity_contract/40038.sol#612) is not in mixedCase
Parameter '_value' of Wallet.execute (/../data/reentrancy/solidity_contract/40038.sol#612) is not in mixedCase
Parameter '_data' of Wallet.execute (/../data/reentrancy/solidity_contract/40038.sol#612) is not in mixedCase
Parameter '_h' of Wallet.confirm (/../data/reentrancy/solidity_contract/40038.sol#637) is not in mixedCase
Function 'Wallet.Wallet' (/../data/reentrancy/solidity_contract/40038.sol#587-589) is not in mixedCase
Parameter '_to' of Wallet.kill (/../data/reentrancy/solidity_contract/40038.sol#592) is not in mixedCase
Variable 'Wallet.m_txs' (/../data/reentrancy/solidity_contract/40038.sol#658) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/../data/reentrancy/solidity_contract/40038.sol analyzed (8 contracts), 88 result(s) found
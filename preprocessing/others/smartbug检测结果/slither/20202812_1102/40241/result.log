INFO:Slither:Compilation warnings/errors on /../data/reentrancy/solidity_contract/40241.sol:
/../data/reentrancy/solidity_contract/40241.sol:29:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier noEther() {if (msg.value > 0) throw; _;}
	                                       ^---^
/../data/reentrancy/solidity_contract/40241.sol:31:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier onlyOwner() {if (owner != msg.sender) throw; _;}
	                                               ^---^
/../data/reentrancy/solidity_contract/40241.sol:33:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier onlyDaoChallenge() {if (daoChallenge != msg.sender) throw; _;}
	                                                             ^---^
/../data/reentrancy/solidity_contract/40241.sol:35:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier onlyChallengeOwner() {if (challengeOwner != msg.sender) throw; _;}
	                                                                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:39:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function DaoAccount (address _owner, uint256 _tokenPrice, address _challengeOwner) noEther {
  ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40241.sol:50:3: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		throw;
		^---^
/../data/reentrancy/solidity_contract/40241.sol:69:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (amount == 0) throw;
		                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:72:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (amount % tokenPrice != 0) throw;
		                              ^---^
/../data/reentrancy/solidity_contract/40241.sol:82:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (tokens == 0 || tokenBalance == 0 || tokenBalance < tokens) throw;
		                                                               ^---^
/../data/reentrancy/solidity_contract/40241.sol:84:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!owner.call.value(tokens * tokenPrice)()) throw;
		                                             ^---^
/../data/reentrancy/solidity_contract/40241.sol:88:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (tokens == 0 || tokenBalance == 0 || tokenBalance < tokens) throw;
		                                                               ^---^
/../data/reentrancy/solidity_contract/40241.sol:96:87: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!AbstractDaoChallenge(daoChallenge).isMember(sender, sender.getOwnerAddress())) throw;
		                                                                                    ^---^
/../data/reentrancy/solidity_contract/40241.sol:101:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (amount == 0) throw;
		                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:103:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (amount / tokenPrice != tokens) throw;
		                                   ^---^
/../data/reentrancy/solidity_contract/40241.sol:145:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier noEther() {if (msg.value > 0) throw; _;}
	                                       ^---^
/../data/reentrancy/solidity_contract/40241.sol:147:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	modifier onlyChallengeOwner() {if (challengeOwner != msg.sender) throw; _;}
	                                                                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:151:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function DaoChallenge () {
 ^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40241.sol:199:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (now < tokenIssueDeadline) throw;
		                              ^---^
/../data/reentrancy/solidity_contract/40241.sol:202:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (deadline < now) throw;
		                    ^---^
/../data/reentrancy/solidity_contract/40241.sol:205:15: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (n == 0) throw;
		            ^---^
/../data/reentrancy/solidity_contract/40241.sol:218:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (now > tokenIssueDeadline) throw;
		                              ^---^
/../data/reentrancy/solidity_contract/40241.sol:219:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (tokensIssued >= tokensToIssue) throw;
		                                   ^---^
/../data/reentrancy/solidity_contract/40241.sol:224:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (tokensIssued > tokensToIssue) throw;
		                                  ^---^
/../data/reentrancy/solidity_contract/40241.sol:227:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (account.buyTokens.value(msg.value)() != tokens) throw;
		                                                    ^---^
/../data/reentrancy/solidity_contract/40241.sol:235:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (account == DaoAccount(0x00)) throw;
		                                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:243:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (account == DaoAccount(0x00)) throw;
		                                 ^---^
/../data/reentrancy/solidity_contract/40241.sol:246:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (recipientAcc == DaoAccount(0x00)) throw;
		                                      ^---^
/../data/reentrancy/solidity_contract/40241.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract AbstractDaoChallenge {
^ (Relevant source part starts here and spans across multiple lines).
/../data/reentrancy/solidity_contract/40241.sol:39:86: Warning: Modifier-style base constructor call without arguments.
  function DaoAccount (address _owner, uint256 _tokenPrice, address _challengeOwner) noEther {
                                                                                     ^-----^
[91m/../data/reentrancy/solidity_contract/40241.sol:90:3: Error: Member "value" not found or not visible after argument-dependent lookup in function (uint256) external - did you forget the "payable" modifier?[0m
		recipient.receiveTokens.value(tokens * tokenPrice)(tokens);
		^---------------------------^

INFO:SlitherSolcParsing:No contract were found in /../data/reentrancy/solidity_contract/40241.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/../data/reentrancy/solidity_contract/40241.sol analyzed (0 contracts), 0 result(s) found